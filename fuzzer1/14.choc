# RUN: choco-opt %s | filecheck %s
def y() :

	ng:[[int]]=888
	X:str="\\"
	nonlocal _
	global _
	pass
	pass
	pass
	pass
	pass
	pass
	pass
	pass
	

pass

# CHECK: module() {
# CHECK-NEXT:  choco.ast.program() {
# CHECK-NEXT:    choco.ast.func_def() ["func_name" = "y"] {} {
# CHECK-NEXT:      choco.ast.type_name() ["type_name" = "<None>"]
# CHECK-NEXT:    } {
# CHECK-NEXT:      choco.ast.var_def() {
# CHECK-NEXT:        choco.ast.typed_var() ["var_name" = "ng"] {
# CHECK-NEXT:          choco.ast.list_type() {
# CHECK-NEXT:            choco.ast.list_type() {
# CHECK-NEXT:              choco.ast.type_name() ["type_name" = "int"]
# CHECK-NEXT:            }
# CHECK-NEXT:          }
# CHECK-NEXT:        }
# CHECK-NEXT:      } {
# CHECK-NEXT:        choco.ast.literal() ["value" = 888 : !i32]
# CHECK-NEXT:      }
# CHECK-NEXT:      choco.ast.var_def() {
# CHECK-NEXT:        choco.ast.typed_var() ["var_name" = "X"] {
# CHECK-NEXT:          choco.ast.type_name() ["type_name" = "str"]
# CHECK-NEXT:        }
# CHECK-NEXT:      } {
# CHECK-NEXT:        choco.ast.literal() ["value" = "\\"]
# CHECK-NEXT:      }
# CHECK-NEXT:      choco.ast.nonlocal_decl() ["decl_name" = "_"]
# CHECK-NEXT:      choco.ast.global_decl() ["decl_name" = "_"]
# CHECK-NEXT:      choco.ast.pass()
# CHECK-NEXT:      choco.ast.pass()
# CHECK-NEXT:      choco.ast.pass()
# CHECK-NEXT:      choco.ast.pass()
# CHECK-NEXT:      choco.ast.pass()
# CHECK-NEXT:      choco.ast.pass()
# CHECK-NEXT:      choco.ast.pass()
# CHECK-NEXT:      choco.ast.pass()
# CHECK-NEXT:    }
# CHECK-NEXT:  } {
# CHECK-NEXT:    choco.ast.pass()
# CHECK-NEXT:  }
# CHECK-NEXT:}
# CHECK-NEXT:
