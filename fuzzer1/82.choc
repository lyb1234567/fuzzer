# RUN: choco-opt %s | filecheck %s
while enZ_ ([not ((h71 ([-_R ([]) and [] and True if not not not not -Q else _ if not not (--True) else True,not -(not (-[])),_,not R,[][not (False[True])]]) * H) * (None) + ([]) % [][not [][not []]] or not [] if j else --(p)[True]),[],not not not [],True,not not (not not not not not not (not not not -Q)),_,-k[b],not not None]) if l else False:

	pass
	

pass
pass
pass
pass
pass

# CHECK: module() {
# CHECK-NEXT:  choco.ast.program() {} {
# CHECK-NEXT:    choco.ast.while() {
# CHECK-NEXT:      choco.ast.if_expr() {
# CHECK-NEXT:        choco.ast.id_expr() ["id" = "l"]
# CHECK-NEXT:      } {
# CHECK-NEXT:        choco.ast.call_expr() ["func" = "enZ_"] {
# CHECK-NEXT:          choco.ast.list_expr() {
# CHECK-NEXT:            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:              choco.ast.if_expr() {
# CHECK-NEXT:                choco.ast.id_expr() ["id" = "j"]
# CHECK-NEXT:              } {
# CHECK-NEXT:                choco.ast.binary_expr() ["op" = "or"] {
# CHECK-NEXT:                  choco.ast.binary_expr() ["op" = "+"] {
# CHECK-NEXT:                    choco.ast.binary_expr() ["op" = "*"] {
# CHECK-NEXT:                      choco.ast.binary_expr() ["op" = "*"] {
# CHECK-NEXT:                        choco.ast.call_expr() ["func" = "h71"] {
# CHECK-NEXT:                          choco.ast.list_expr() {
# CHECK-NEXT:                            choco.ast.if_expr() {
# CHECK-NEXT:                              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                      choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                                        choco.ast.id_expr() ["id" = "Q"]
# CHECK-NEXT:                                      }
# CHECK-NEXT:                                    }
# CHECK-NEXT:                                  }
# CHECK-NEXT:                                }
# CHECK-NEXT:                              }
# CHECK-NEXT:                            } {
# CHECK-NEXT:                              choco.ast.binary_expr() ["op" = "and"] {
# CHECK-NEXT:                                choco.ast.binary_expr() ["op" = "and"] {
# CHECK-NEXT:                                  choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                                    choco.ast.call_expr() ["func" = "_R"] {
# CHECK-NEXT:                                      choco.ast.list_expr() {}
# CHECK-NEXT:                                    }
# CHECK-NEXT:                                  }
# CHECK-NEXT:                                } {
# CHECK-NEXT:                                  choco.ast.list_expr() {}
# CHECK-NEXT:                                }
# CHECK-NEXT:                              } {
# CHECK-NEXT:                                choco.ast.literal() ["value" = !choco.ast.bool<True>]
# CHECK-NEXT:                              }
# CHECK-NEXT:                            } {
# CHECK-NEXT:                              choco.ast.if_expr() {
# CHECK-NEXT:                                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                    choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                                      choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                                        choco.ast.literal() ["value" = !choco.ast.bool<True>]
# CHECK-NEXT:                                      }
# CHECK-NEXT:                                    }
# CHECK-NEXT:                                  }
# CHECK-NEXT:                                }
# CHECK-NEXT:                              } {
# CHECK-NEXT:                                choco.ast.id_expr() ["id" = "_"]
# CHECK-NEXT:                              } {
# CHECK-NEXT:                                choco.ast.literal() ["value" = !choco.ast.bool<True>]
# CHECK-NEXT:                              }
# CHECK-NEXT:                            }
# CHECK-NEXT:                            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                              choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                  choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                                    choco.ast.list_expr() {}
# CHECK-NEXT:                                  }
# CHECK-NEXT:                                }
# CHECK-NEXT:                              }
# CHECK-NEXT:                            }
# CHECK-NEXT:                            choco.ast.id_expr() ["id" = "_"]
# CHECK-NEXT:                            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                              choco.ast.id_expr() ["id" = "R"]
# CHECK-NEXT:                            }
# CHECK-NEXT:                            choco.ast.index_expr() {
# CHECK-NEXT:                              choco.ast.list_expr() {}
# CHECK-NEXT:                            } {
# CHECK-NEXT:                              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                choco.ast.index_expr() {
# CHECK-NEXT:                                  choco.ast.literal() ["value" = !choco.ast.bool<False>]
# CHECK-NEXT:                                } {
# CHECK-NEXT:                                  choco.ast.literal() ["value" = !choco.ast.bool<True>]
# CHECK-NEXT:                                }
# CHECK-NEXT:                              }
# CHECK-NEXT:                            }
# CHECK-NEXT:                          }
# CHECK-NEXT:                        }
# CHECK-NEXT:                      } {
# CHECK-NEXT:                        choco.ast.id_expr() ["id" = "H"]
# CHECK-NEXT:                      }
# CHECK-NEXT:                    } {
# CHECK-NEXT:                      choco.ast.literal() ["value" = !choco.ast.none]
# CHECK-NEXT:                    }
# CHECK-NEXT:                  } {
# CHECK-NEXT:                    choco.ast.binary_expr() ["op" = "%"] {
# CHECK-NEXT:                      choco.ast.list_expr() {}
# CHECK-NEXT:                    } {
# CHECK-NEXT:                      choco.ast.index_expr() {
# CHECK-NEXT:                        choco.ast.list_expr() {}
# CHECK-NEXT:                      } {
# CHECK-NEXT:                        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                          choco.ast.index_expr() {
# CHECK-NEXT:                            choco.ast.list_expr() {}
# CHECK-NEXT:                          } {
# CHECK-NEXT:                            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                              choco.ast.list_expr() {}
# CHECK-NEXT:                            }
# CHECK-NEXT:                          }
# CHECK-NEXT:                        }
# CHECK-NEXT:                      }
# CHECK-NEXT:                    }
# CHECK-NEXT:                  }
# CHECK-NEXT:                } {
# CHECK-NEXT:                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                    choco.ast.list_expr() {}
# CHECK-NEXT:                  }
# CHECK-NEXT:                }
# CHECK-NEXT:              } {
# CHECK-NEXT:                choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                  choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                    choco.ast.index_expr() {
# CHECK-NEXT:                      choco.ast.id_expr() ["id" = "p"]
# CHECK-NEXT:                    } {
# CHECK-NEXT:                      choco.ast.literal() ["value" = !choco.ast.bool<True>]
# CHECK-NEXT:                    }
# CHECK-NEXT:                  }
# CHECK-NEXT:                }
# CHECK-NEXT:              }
# CHECK-NEXT:            }
# CHECK-NEXT:            choco.ast.list_expr() {}
# CHECK-NEXT:            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                  choco.ast.list_expr() {}
# CHECK-NEXT:                }
# CHECK-NEXT:              }
# CHECK-NEXT:            }
# CHECK-NEXT:            choco.ast.literal() ["value" = !choco.ast.bool<True>]
# CHECK-NEXT:            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                  choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                                    choco.ast.id_expr() ["id" = "Q"]
# CHECK-NEXT:                                  }
# CHECK-NEXT:                                }
# CHECK-NEXT:                              }
# CHECK-NEXT:                            }
# CHECK-NEXT:                          }
# CHECK-NEXT:                        }
# CHECK-NEXT:                      }
# CHECK-NEXT:                    }
# CHECK-NEXT:                  }
# CHECK-NEXT:                }
# CHECK-NEXT:              }
# CHECK-NEXT:            }
# CHECK-NEXT:            choco.ast.id_expr() ["id" = "_"]
# CHECK-NEXT:            choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:              choco.ast.index_expr() {
# CHECK-NEXT:                choco.ast.id_expr() ["id" = "k"]
# CHECK-NEXT:              } {
# CHECK-NEXT:                choco.ast.id_expr() ["id" = "b"]
# CHECK-NEXT:              }
# CHECK-NEXT:            }
# CHECK-NEXT:            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                choco.ast.literal() ["value" = !choco.ast.none]
# CHECK-NEXT:              }
# CHECK-NEXT:            }
# CHECK-NEXT:          }
# CHECK-NEXT:        }
# CHECK-NEXT:      } {
# CHECK-NEXT:        choco.ast.literal() ["value" = !choco.ast.bool<False>]
# CHECK-NEXT:      }
# CHECK-NEXT:    } {
# CHECK-NEXT:      choco.ast.pass()
# CHECK-NEXT:    }
# CHECK-NEXT:    choco.ast.pass()
# CHECK-NEXT:    choco.ast.pass()
# CHECK-NEXT:    choco.ast.pass()
# CHECK-NEXT:    choco.ast.pass()
# CHECK-NEXT:    choco.ast.pass()
# CHECK-NEXT:  }
# CHECK-NEXT:}
# CHECK-NEXT:
