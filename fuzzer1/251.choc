# RUN: choco-opt %s | filecheck %s
_9_Q_:[[[int]]]=False
if H:

	not not not not F or not not not not [] and L and not not (not []) if not not not not [] else (_) if not not not not not not (-False[[]])[not not not not c] else not (False) or (not not e)[not not not not not None]=--O=[]
	

else:

	pass
	


# CHECK: module() {
# CHECK-NEXT:  choco.ast.program() {
# CHECK-NEXT:    choco.ast.var_def() {
# CHECK-NEXT:      choco.ast.typed_var() ["var_name" = "_9_Q_"] {
# CHECK-NEXT:        choco.ast.list_type() {
# CHECK-NEXT:          choco.ast.list_type() {
# CHECK-NEXT:            choco.ast.list_type() {
# CHECK-NEXT:              choco.ast.type_name() ["type_name" = "int"]
# CHECK-NEXT:            }
# CHECK-NEXT:          }
# CHECK-NEXT:        }
# CHECK-NEXT:      }
# CHECK-NEXT:    } {
# CHECK-NEXT:      choco.ast.literal() ["value" = !choco.ast.bool<False>]
# CHECK-NEXT:    }
# CHECK-NEXT:  } {
# CHECK-NEXT:    choco.ast.if() {
# CHECK-NEXT:      choco.ast.id_expr() ["id" = "H"]
# CHECK-NEXT:    } {
# CHECK-NEXT:      choco.ast.assign() {
# CHECK-NEXT:        choco.ast.if_expr() {
# CHECK-NEXT:          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                  choco.ast.list_expr() {}
# CHECK-NEXT:                }
# CHECK-NEXT:              }
# CHECK-NEXT:            }
# CHECK-NEXT:          }
# CHECK-NEXT:        } {
# CHECK-NEXT:          choco.ast.binary_expr() ["op" = "or"] {
# CHECK-NEXT:            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                    choco.ast.id_expr() ["id" = "F"]
# CHECK-NEXT:                  }
# CHECK-NEXT:                }
# CHECK-NEXT:              }
# CHECK-NEXT:            }
# CHECK-NEXT:          } {
# CHECK-NEXT:            choco.ast.binary_expr() ["op" = "and"] {
# CHECK-NEXT:              choco.ast.binary_expr() ["op" = "and"] {
# CHECK-NEXT:                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                        choco.ast.list_expr() {}
# CHECK-NEXT:                      }
# CHECK-NEXT:                    }
# CHECK-NEXT:                  }
# CHECK-NEXT:                }
# CHECK-NEXT:              } {
# CHECK-NEXT:                choco.ast.id_expr() ["id" = "L"]
# CHECK-NEXT:              }
# CHECK-NEXT:            } {
# CHECK-NEXT:              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                    choco.ast.list_expr() {}
# CHECK-NEXT:                  }
# CHECK-NEXT:                }
# CHECK-NEXT:              }
# CHECK-NEXT:            }
# CHECK-NEXT:          }
# CHECK-NEXT:        } {
# CHECK-NEXT:          choco.ast.if_expr() {
# CHECK-NEXT:            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                        choco.ast.index_expr() {
# CHECK-NEXT:                          choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                            choco.ast.index_expr() {
# CHECK-NEXT:                              choco.ast.literal() ["value" = !choco.ast.bool<False>]
# CHECK-NEXT:                            } {
# CHECK-NEXT:                              choco.ast.list_expr() {}
# CHECK-NEXT:                            }
# CHECK-NEXT:                          }
# CHECK-NEXT:                        } {
# CHECK-NEXT:                          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                  choco.ast.id_expr() ["id" = "c"]
# CHECK-NEXT:                                }
# CHECK-NEXT:                              }
# CHECK-NEXT:                            }
# CHECK-NEXT:                          }
# CHECK-NEXT:                        }
# CHECK-NEXT:                      }
# CHECK-NEXT:                    }
# CHECK-NEXT:                  }
# CHECK-NEXT:                }
# CHECK-NEXT:              }
# CHECK-NEXT:            }
# CHECK-NEXT:          } {
# CHECK-NEXT:            choco.ast.id_expr() ["id" = "_"]
# CHECK-NEXT:          } {
# CHECK-NEXT:            choco.ast.binary_expr() ["op" = "or"] {
# CHECK-NEXT:              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                choco.ast.literal() ["value" = !choco.ast.bool<False>]
# CHECK-NEXT:              }
# CHECK-NEXT:            } {
# CHECK-NEXT:              choco.ast.index_expr() {
# CHECK-NEXT:                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                    choco.ast.id_expr() ["id" = "e"]
# CHECK-NEXT:                  }
# CHECK-NEXT:                }
# CHECK-NEXT:              } {
# CHECK-NEXT:                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                          choco.ast.literal() ["value" = !choco.ast.none]
# CHECK-NEXT:                        }
# CHECK-NEXT:                      }
# CHECK-NEXT:                    }
# CHECK-NEXT:                  }
# CHECK-NEXT:                }
# CHECK-NEXT:              }
# CHECK-NEXT:            }
# CHECK-NEXT:          }
# CHECK-NEXT:        }
# CHECK-NEXT:      } {
# CHECK-NEXT:        choco.ast.assign() {
# CHECK-NEXT:          choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:            choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:              choco.ast.id_expr() ["id" = "O"]
# CHECK-NEXT:            }
# CHECK-NEXT:          }
# CHECK-NEXT:        } {
# CHECK-NEXT:          choco.ast.list_expr() {}
# CHECK-NEXT:        }
# CHECK-NEXT:      }
# CHECK-NEXT:    } {
# CHECK-NEXT:      choco.ast.pass()
# CHECK-NEXT:    }
# CHECK-NEXT:  }
# CHECK-NEXT:}
# CHECK-NEXT:
