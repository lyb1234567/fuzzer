# RUN: choco-opt %s | filecheck %s
def P8() -> str:

	nonlocal __
	s:object=True
	not [not -None or _ if not (f)[not not -(_)] else not not not (not ([])) and not not not (v)] if not not (--[][not not not not [][not i]]) else not [] or not C=not not [][--a]=-False=(not not not not L)[not not not -False[not not -None[not []]]]=[]=-None=-(not [])[None]=not not not None[G]=[]
	pass
	

pass

# CHECK: module() {
# CHECK-NEXT:  choco.ast.program() {
# CHECK-NEXT:    choco.ast.func_def() ["func_name" = "P8"] {} {
# CHECK-NEXT:      choco.ast.type_name() ["type_name" = "str"]
# CHECK-NEXT:    } {
# CHECK-NEXT:      choco.ast.nonlocal_decl() ["decl_name" = "__"]
# CHECK-NEXT:      choco.ast.var_def() {
# CHECK-NEXT:        choco.ast.typed_var() ["var_name" = "s"] {
# CHECK-NEXT:          choco.ast.type_name() ["type_name" = "object"]
# CHECK-NEXT:        }
# CHECK-NEXT:      } {
# CHECK-NEXT:        choco.ast.literal() ["value" = !choco.ast.bool<True>]
# CHECK-NEXT:      }
# CHECK-NEXT:      choco.ast.assign() {
# CHECK-NEXT:        choco.ast.if_expr() {
# CHECK-NEXT:          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:              choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                  choco.ast.index_expr() {
# CHECK-NEXT:                    choco.ast.list_expr() {}
# CHECK-NEXT:                  } {
# CHECK-NEXT:                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                            choco.ast.index_expr() {
# CHECK-NEXT:                              choco.ast.list_expr() {}
# CHECK-NEXT:                            } {
# CHECK-NEXT:                              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                choco.ast.id_expr() ["id" = "i"]
# CHECK-NEXT:                              }
# CHECK-NEXT:                            }
# CHECK-NEXT:                          }
# CHECK-NEXT:                        }
# CHECK-NEXT:                      }
# CHECK-NEXT:                    }
# CHECK-NEXT:                  }
# CHECK-NEXT:                }
# CHECK-NEXT:              }
# CHECK-NEXT:            }
# CHECK-NEXT:          }
# CHECK-NEXT:        } {
# CHECK-NEXT:          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:            choco.ast.list_expr() {
# CHECK-NEXT:              choco.ast.if_expr() {
# CHECK-NEXT:                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                  choco.ast.index_expr() {
# CHECK-NEXT:                    choco.ast.id_expr() ["id" = "f"]
# CHECK-NEXT:                  } {
# CHECK-NEXT:                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                        choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                          choco.ast.id_expr() ["id" = "_"]
# CHECK-NEXT:                        }
# CHECK-NEXT:                      }
# CHECK-NEXT:                    }
# CHECK-NEXT:                  }
# CHECK-NEXT:                }
# CHECK-NEXT:              } {
# CHECK-NEXT:                choco.ast.binary_expr() ["op" = "or"] {
# CHECK-NEXT:                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                    choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                      choco.ast.literal() ["value" = !choco.ast.none]
# CHECK-NEXT:                    }
# CHECK-NEXT:                  }
# CHECK-NEXT:                } {
# CHECK-NEXT:                  choco.ast.id_expr() ["id" = "_"]
# CHECK-NEXT:                }
# CHECK-NEXT:              } {
# CHECK-NEXT:                choco.ast.binary_expr() ["op" = "and"] {
# CHECK-NEXT:                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                          choco.ast.list_expr() {}
# CHECK-NEXT:                        }
# CHECK-NEXT:                      }
# CHECK-NEXT:                    }
# CHECK-NEXT:                  }
# CHECK-NEXT:                } {
# CHECK-NEXT:                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                        choco.ast.id_expr() ["id" = "v"]
# CHECK-NEXT:                      }
# CHECK-NEXT:                    }
# CHECK-NEXT:                  }
# CHECK-NEXT:                }
# CHECK-NEXT:              }
# CHECK-NEXT:            }
# CHECK-NEXT:          }
# CHECK-NEXT:        } {
# CHECK-NEXT:          choco.ast.binary_expr() ["op" = "or"] {
# CHECK-NEXT:            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:              choco.ast.list_expr() {}
# CHECK-NEXT:            }
# CHECK-NEXT:          } {
# CHECK-NEXT:            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:              choco.ast.id_expr() ["id" = "C"]
# CHECK-NEXT:            }
# CHECK-NEXT:          }
# CHECK-NEXT:        }
# CHECK-NEXT:      } {
# CHECK-NEXT:        choco.ast.assign() {
# CHECK-NEXT:          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:              choco.ast.index_expr() {
# CHECK-NEXT:                choco.ast.list_expr() {}
# CHECK-NEXT:              } {
# CHECK-NEXT:                choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                  choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                    choco.ast.id_expr() ["id" = "a"]
# CHECK-NEXT:                  }
# CHECK-NEXT:                }
# CHECK-NEXT:              }
# CHECK-NEXT:            }
# CHECK-NEXT:          }
# CHECK-NEXT:        } {
# CHECK-NEXT:          choco.ast.assign() {
# CHECK-NEXT:            choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:              choco.ast.literal() ["value" = !choco.ast.bool<False>]
# CHECK-NEXT:            }
# CHECK-NEXT:          } {
# CHECK-NEXT:            choco.ast.assign() {
# CHECK-NEXT:              choco.ast.index_expr() {
# CHECK-NEXT:                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                        choco.ast.id_expr() ["id" = "L"]
# CHECK-NEXT:                      }
# CHECK-NEXT:                    }
# CHECK-NEXT:                  }
# CHECK-NEXT:                }
# CHECK-NEXT:              } {
# CHECK-NEXT:                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                      choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                        choco.ast.index_expr() {
# CHECK-NEXT:                          choco.ast.literal() ["value" = !choco.ast.bool<False>]
# CHECK-NEXT:                        } {
# CHECK-NEXT:                          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                              choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                                choco.ast.index_expr() {
# CHECK-NEXT:                                  choco.ast.literal() ["value" = !choco.ast.none]
# CHECK-NEXT:                                } {
# CHECK-NEXT:                                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                    choco.ast.list_expr() {}
# CHECK-NEXT:                                  }
# CHECK-NEXT:                                }
# CHECK-NEXT:                              }
# CHECK-NEXT:                            }
# CHECK-NEXT:                          }
# CHECK-NEXT:                        }
# CHECK-NEXT:                      }
# CHECK-NEXT:                    }
# CHECK-NEXT:                  }
# CHECK-NEXT:                }
# CHECK-NEXT:              }
# CHECK-NEXT:            } {
# CHECK-NEXT:              choco.ast.assign() {
# CHECK-NEXT:                choco.ast.list_expr() {}
# CHECK-NEXT:              } {
# CHECK-NEXT:                choco.ast.assign() {
# CHECK-NEXT:                  choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                    choco.ast.literal() ["value" = !choco.ast.none]
# CHECK-NEXT:                  }
# CHECK-NEXT:                } {
# CHECK-NEXT:                  choco.ast.assign() {
# CHECK-NEXT:                    choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                      choco.ast.index_expr() {
# CHECK-NEXT:                        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                          choco.ast.list_expr() {}
# CHECK-NEXT:                        }
# CHECK-NEXT:                      } {
# CHECK-NEXT:                        choco.ast.literal() ["value" = !choco.ast.none]
# CHECK-NEXT:                      }
# CHECK-NEXT:                    }
# CHECK-NEXT:                  } {
# CHECK-NEXT:                    choco.ast.assign() {
# CHECK-NEXT:                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                            choco.ast.index_expr() {
# CHECK-NEXT:                              choco.ast.literal() ["value" = !choco.ast.none]
# CHECK-NEXT:                            } {
# CHECK-NEXT:                              choco.ast.id_expr() ["id" = "G"]
# CHECK-NEXT:                            }
# CHECK-NEXT:                          }
# CHECK-NEXT:                        }
# CHECK-NEXT:                      }
# CHECK-NEXT:                    } {
# CHECK-NEXT:                      choco.ast.list_expr() {}
# CHECK-NEXT:                    }
# CHECK-NEXT:                  }
# CHECK-NEXT:                }
# CHECK-NEXT:              }
# CHECK-NEXT:            }
# CHECK-NEXT:          }
# CHECK-NEXT:        }
# CHECK-NEXT:      }
# CHECK-NEXT:      choco.ast.pass()
# CHECK-NEXT:    }
# CHECK-NEXT:  } {
# CHECK-NEXT:    choco.ast.pass()
# CHECK-NEXT:  }
# CHECK-NEXT:}
# CHECK-NEXT:
