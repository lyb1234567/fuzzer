# RUN: choco-opt %s | filecheck %s
if "<p":

	if "F~" + __ ([not K]):
	
		return not -True and -_d
		
	
	


# CHECK: module() {
# CHECK-NEXT:  choco.ast.program() {} {
# CHECK-NEXT:    choco.ast.if() {
# CHECK-NEXT:      choco.ast.literal() ["value" = "<p"]
# CHECK-NEXT:    } {
# CHECK-NEXT:      choco.ast.if() {
# CHECK-NEXT:        choco.ast.binary_expr() ["op" = "+"] {
# CHECK-NEXT:          choco.ast.literal() ["value" = "F~"]
# CHECK-NEXT:        } {
# CHECK-NEXT:          choco.ast.call_expr() ["func" = "__"] {
# CHECK-NEXT:            choco.ast.list_expr() {
# CHECK-NEXT:              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                choco.ast.id_expr() ["id" = "K"]
# CHECK-NEXT:              }
# CHECK-NEXT:            }
# CHECK-NEXT:          }
# CHECK-NEXT:        }
# CHECK-NEXT:      } {
# CHECK-NEXT:        choco.ast.return() {
# CHECK-NEXT:          choco.ast.binary_expr() ["op" = "and"] {
# CHECK-NEXT:            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:              choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                choco.ast.literal() ["value" = !choco.ast.bool<True>]
# CHECK-NEXT:              }
# CHECK-NEXT:            }
# CHECK-NEXT:          } {
# CHECK-NEXT:            choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:              choco.ast.id_expr() ["id" = "_d"]
# CHECK-NEXT:            }
# CHECK-NEXT:          }
# CHECK-NEXT:        }
# CHECK-NEXT:      } {}
# CHECK-NEXT:    } {}
# CHECK-NEXT:  }
# CHECK-NEXT:}
# CHECK-NEXT:
