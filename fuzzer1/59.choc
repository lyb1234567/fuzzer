# RUN: choco-opt %s | filecheck %s
m:str=""
def _() :

	pass
	pass
	

def __(_:int) -> [[object]]:

	pass
	pass
	

pass
pass

# CHECK: module() {
# CHECK-NEXT:  choco.ast.program() {
# CHECK-NEXT:    choco.ast.var_def() {
# CHECK-NEXT:      choco.ast.typed_var() ["var_name" = "m"] {
# CHECK-NEXT:        choco.ast.type_name() ["type_name" = "str"]
# CHECK-NEXT:      }
# CHECK-NEXT:    } {
# CHECK-NEXT:      choco.ast.literal() ["value" = ""]
# CHECK-NEXT:    }
# CHECK-NEXT:    choco.ast.func_def() ["func_name" = "_"] {} {
# CHECK-NEXT:      choco.ast.type_name() ["type_name" = "<None>"]
# CHECK-NEXT:    } {
# CHECK-NEXT:      choco.ast.pass()
# CHECK-NEXT:      choco.ast.pass()
# CHECK-NEXT:    }
# CHECK-NEXT:    choco.ast.func_def() ["func_name" = "__"] {
# CHECK-NEXT:      choco.ast.typed_var() ["var_name" = "_"] {
# CHECK-NEXT:        choco.ast.type_name() ["type_name" = "int"]
# CHECK-NEXT:      }
# CHECK-NEXT:    } {
# CHECK-NEXT:      choco.ast.list_type() {
# CHECK-NEXT:        choco.ast.list_type() {
# CHECK-NEXT:          choco.ast.type_name() ["type_name" = "object"]
# CHECK-NEXT:        }
# CHECK-NEXT:      }
# CHECK-NEXT:    } {
# CHECK-NEXT:      choco.ast.pass()
# CHECK-NEXT:      choco.ast.pass()
# CHECK-NEXT:    }
# CHECK-NEXT:  } {
# CHECK-NEXT:    choco.ast.pass()
# CHECK-NEXT:    choco.ast.pass()
# CHECK-NEXT:  }
# CHECK-NEXT:}
# CHECK-NEXT:
