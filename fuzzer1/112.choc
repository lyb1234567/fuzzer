# RUN: choco-opt %s | filecheck %s
c:[object]="\\ E_~q"
def nt() -> [int]:

	nonlocal _30
	for __ in not ([])[not x]:
	
		pass
		pass
		pass
		pass
		
	
	pass
	

pass
pass
pass
pass

# CHECK: module() {
# CHECK-NEXT:  choco.ast.program() {
# CHECK-NEXT:    choco.ast.var_def() {
# CHECK-NEXT:      choco.ast.typed_var() ["var_name" = "c"] {
# CHECK-NEXT:        choco.ast.list_type() {
# CHECK-NEXT:          choco.ast.type_name() ["type_name" = "object"]
# CHECK-NEXT:        }
# CHECK-NEXT:      }
# CHECK-NEXT:    } {
# CHECK-NEXT:      choco.ast.literal() ["value" = "\\ E_~q"]
# CHECK-NEXT:    }
# CHECK-NEXT:    choco.ast.func_def() ["func_name" = "nt"] {} {
# CHECK-NEXT:      choco.ast.list_type() {
# CHECK-NEXT:        choco.ast.type_name() ["type_name" = "int"]
# CHECK-NEXT:      }
# CHECK-NEXT:    } {
# CHECK-NEXT:      choco.ast.nonlocal_decl() ["decl_name" = "_30"]
# CHECK-NEXT:      choco.ast.for() ["iter_name" = "__"] {
# CHECK-NEXT:        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:          choco.ast.index_expr() {
# CHECK-NEXT:            choco.ast.list_expr() {}
# CHECK-NEXT:          } {
# CHECK-NEXT:            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:              choco.ast.id_expr() ["id" = "x"]
# CHECK-NEXT:            }
# CHECK-NEXT:          }
# CHECK-NEXT:        }
# CHECK-NEXT:      } {
# CHECK-NEXT:        choco.ast.pass()
# CHECK-NEXT:        choco.ast.pass()
# CHECK-NEXT:        choco.ast.pass()
# CHECK-NEXT:        choco.ast.pass()
# CHECK-NEXT:      }
# CHECK-NEXT:      choco.ast.pass()
# CHECK-NEXT:    }
# CHECK-NEXT:  } {
# CHECK-NEXT:    choco.ast.pass()
# CHECK-NEXT:    choco.ast.pass()
# CHECK-NEXT:    choco.ast.pass()
# CHECK-NEXT:    choco.ast.pass()
# CHECK-NEXT:  }
# CHECK-NEXT:}
# CHECK-NEXT:
