# RUN: choco-opt %s | filecheck %s
W:[[[[[bool]]]]]=""
A3:bool=81
if not not [not ([][False]) % (False) or A if [] else not not g or not not not I] or (A) or not ((not not not not ""))[True] if not [] else []:

	pass
	

else:

	pass
	


# CHECK: module() {
# CHECK-NEXT:  choco.ast.program() {
# CHECK-NEXT:    choco.ast.var_def() {
# CHECK-NEXT:      choco.ast.typed_var() ["var_name" = "W"] {
# CHECK-NEXT:        choco.ast.list_type() {
# CHECK-NEXT:          choco.ast.list_type() {
# CHECK-NEXT:            choco.ast.list_type() {
# CHECK-NEXT:              choco.ast.list_type() {
# CHECK-NEXT:                choco.ast.list_type() {
# CHECK-NEXT:                  choco.ast.type_name() ["type_name" = "bool"]
# CHECK-NEXT:                }
# CHECK-NEXT:              }
# CHECK-NEXT:            }
# CHECK-NEXT:          }
# CHECK-NEXT:        }
# CHECK-NEXT:      }
# CHECK-NEXT:    } {
# CHECK-NEXT:      choco.ast.literal() ["value" = ""]
# CHECK-NEXT:    }
# CHECK-NEXT:    choco.ast.var_def() {
# CHECK-NEXT:      choco.ast.typed_var() ["var_name" = "A3"] {
# CHECK-NEXT:        choco.ast.type_name() ["type_name" = "bool"]
# CHECK-NEXT:      }
# CHECK-NEXT:    } {
# CHECK-NEXT:      choco.ast.literal() ["value" = 81 : !i32]
# CHECK-NEXT:    }
# CHECK-NEXT:  } {
# CHECK-NEXT:    choco.ast.if() {
# CHECK-NEXT:      choco.ast.if_expr() {
# CHECK-NEXT:        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:          choco.ast.list_expr() {}
# CHECK-NEXT:        }
# CHECK-NEXT:      } {
# CHECK-NEXT:        choco.ast.binary_expr() ["op" = "or"] {
# CHECK-NEXT:          choco.ast.binary_expr() ["op" = "or"] {
# CHECK-NEXT:            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                choco.ast.list_expr() {
# CHECK-NEXT:                  choco.ast.if_expr() {
# CHECK-NEXT:                    choco.ast.list_expr() {}
# CHECK-NEXT:                  } {
# CHECK-NEXT:                    choco.ast.binary_expr() ["op" = "or"] {
# CHECK-NEXT:                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                        choco.ast.binary_expr() ["op" = "%"] {
# CHECK-NEXT:                          choco.ast.index_expr() {
# CHECK-NEXT:                            choco.ast.list_expr() {}
# CHECK-NEXT:                          } {
# CHECK-NEXT:                            choco.ast.literal() ["value" = !choco.ast.bool<False>]
# CHECK-NEXT:                          }
# CHECK-NEXT:                        } {
# CHECK-NEXT:                          choco.ast.literal() ["value" = !choco.ast.bool<False>]
# CHECK-NEXT:                        }
# CHECK-NEXT:                      }
# CHECK-NEXT:                    } {
# CHECK-NEXT:                      choco.ast.id_expr() ["id" = "A"]
# CHECK-NEXT:                    }
# CHECK-NEXT:                  } {
# CHECK-NEXT:                    choco.ast.binary_expr() ["op" = "or"] {
# CHECK-NEXT:                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                          choco.ast.id_expr() ["id" = "g"]
# CHECK-NEXT:                        }
# CHECK-NEXT:                      }
# CHECK-NEXT:                    } {
# CHECK-NEXT:                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                            choco.ast.id_expr() ["id" = "I"]
# CHECK-NEXT:                          }
# CHECK-NEXT:                        }
# CHECK-NEXT:                      }
# CHECK-NEXT:                    }
# CHECK-NEXT:                  }
# CHECK-NEXT:                }
# CHECK-NEXT:              }
# CHECK-NEXT:            }
# CHECK-NEXT:          } {
# CHECK-NEXT:            choco.ast.id_expr() ["id" = "A"]
# CHECK-NEXT:          }
# CHECK-NEXT:        } {
# CHECK-NEXT:          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:            choco.ast.index_expr() {
# CHECK-NEXT:              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                      choco.ast.literal() ["value" = ""]
# CHECK-NEXT:                    }
# CHECK-NEXT:                  }
# CHECK-NEXT:                }
# CHECK-NEXT:              }
# CHECK-NEXT:            } {
# CHECK-NEXT:              choco.ast.literal() ["value" = !choco.ast.bool<True>]
# CHECK-NEXT:            }
# CHECK-NEXT:          }
# CHECK-NEXT:        }
# CHECK-NEXT:      } {
# CHECK-NEXT:        choco.ast.list_expr() {}
# CHECK-NEXT:      }
# CHECK-NEXT:    } {
# CHECK-NEXT:      choco.ast.pass()
# CHECK-NEXT:    } {
# CHECK-NEXT:      choco.ast.pass()
# CHECK-NEXT:    }
# CHECK-NEXT:  }
# CHECK-NEXT:}
# CHECK-NEXT:
