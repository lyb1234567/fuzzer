# RUN: choco-opt %s | filecheck %s
if [not O__ if -h ([x,True,[not not not A and (not not not None[[]]) if not False[not []] else not "" if not [] else False if g else -(---((-(not True)[not not not not not not not None][not not _])[not not ((not -[]))][k])) if A else not [] and not not ((not not -([][X][not not not not -F])))[not ""],(N),(False),not not -(_),True[not not not not --[][a]]]]) else ---[],[]] if not -[] else not [] if ([]) else K:

	pass
	

pass

# CHECK: module() {
# CHECK-NEXT:  choco.ast.program() {} {
# CHECK-NEXT:    choco.ast.if() {
# CHECK-NEXT:      choco.ast.if_expr() {
# CHECK-NEXT:        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:          choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:            choco.ast.list_expr() {}
# CHECK-NEXT:          }
# CHECK-NEXT:        }
# CHECK-NEXT:      } {
# CHECK-NEXT:        choco.ast.list_expr() {
# CHECK-NEXT:          choco.ast.if_expr() {
# CHECK-NEXT:            choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:              choco.ast.call_expr() ["func" = "h"] {
# CHECK-NEXT:                choco.ast.list_expr() {
# CHECK-NEXT:                  choco.ast.id_expr() ["id" = "x"]
# CHECK-NEXT:                  choco.ast.literal() ["value" = !choco.ast.bool<True>]
# CHECK-NEXT:                  choco.ast.list_expr() {
# CHECK-NEXT:                    choco.ast.if_expr() {
# CHECK-NEXT:                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                        choco.ast.index_expr() {
# CHECK-NEXT:                          choco.ast.literal() ["value" = !choco.ast.bool<False>]
# CHECK-NEXT:                        } {
# CHECK-NEXT:                          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                            choco.ast.list_expr() {}
# CHECK-NEXT:                          }
# CHECK-NEXT:                        }
# CHECK-NEXT:                      }
# CHECK-NEXT:                    } {
# CHECK-NEXT:                      choco.ast.binary_expr() ["op" = "and"] {
# CHECK-NEXT:                        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                              choco.ast.id_expr() ["id" = "A"]
# CHECK-NEXT:                            }
# CHECK-NEXT:                          }
# CHECK-NEXT:                        }
# CHECK-NEXT:                      } {
# CHECK-NEXT:                        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                              choco.ast.index_expr() {
# CHECK-NEXT:                                choco.ast.literal() ["value" = !choco.ast.none]
# CHECK-NEXT:                              } {
# CHECK-NEXT:                                choco.ast.list_expr() {}
# CHECK-NEXT:                              }
# CHECK-NEXT:                            }
# CHECK-NEXT:                          }
# CHECK-NEXT:                        }
# CHECK-NEXT:                      }
# CHECK-NEXT:                    } {
# CHECK-NEXT:                      choco.ast.if_expr() {
# CHECK-NEXT:                        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                          choco.ast.list_expr() {}
# CHECK-NEXT:                        }
# CHECK-NEXT:                      } {
# CHECK-NEXT:                        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                          choco.ast.literal() ["value" = ""]
# CHECK-NEXT:                        }
# CHECK-NEXT:                      } {
# CHECK-NEXT:                        choco.ast.if_expr() {
# CHECK-NEXT:                          choco.ast.id_expr() ["id" = "g"]
# CHECK-NEXT:                        } {
# CHECK-NEXT:                          choco.ast.literal() ["value" = !choco.ast.bool<False>]
# CHECK-NEXT:                        } {
# CHECK-NEXT:                          choco.ast.if_expr() {
# CHECK-NEXT:                            choco.ast.id_expr() ["id" = "A"]
# CHECK-NEXT:                          } {
# CHECK-NEXT:                            choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                              choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                                choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                                  choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                                    choco.ast.index_expr() {
# CHECK-NEXT:                                      choco.ast.index_expr() {
# CHECK-NEXT:                                        choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                                          choco.ast.index_expr() {
# CHECK-NEXT:                                            choco.ast.index_expr() {
# CHECK-NEXT:                                              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                                choco.ast.literal() ["value" = !choco.ast.bool<True>]
# CHECK-NEXT:                                              }
# CHECK-NEXT:                                            } {
# CHECK-NEXT:                                              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                                        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                                          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                                            choco.ast.literal() ["value" = !choco.ast.none]
# CHECK-NEXT:                                                          }
# CHECK-NEXT:                                                        }
# CHECK-NEXT:                                                      }
# CHECK-NEXT:                                                    }
# CHECK-NEXT:                                                  }
# CHECK-NEXT:                                                }
# CHECK-NEXT:                                              }
# CHECK-NEXT:                                            }
# CHECK-NEXT:                                          } {
# CHECK-NEXT:                                            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                                choco.ast.id_expr() ["id" = "_"]
# CHECK-NEXT:                                              }
# CHECK-NEXT:                                            }
# CHECK-NEXT:                                          }
# CHECK-NEXT:                                        }
# CHECK-NEXT:                                      } {
# CHECK-NEXT:                                        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                              choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                                                choco.ast.list_expr() {}
# CHECK-NEXT:                                              }
# CHECK-NEXT:                                            }
# CHECK-NEXT:                                          }
# CHECK-NEXT:                                        }
# CHECK-NEXT:                                      }
# CHECK-NEXT:                                    } {
# CHECK-NEXT:                                      choco.ast.id_expr() ["id" = "k"]
# CHECK-NEXT:                                    }
# CHECK-NEXT:                                  }
# CHECK-NEXT:                                }
# CHECK-NEXT:                              }
# CHECK-NEXT:                            }
# CHECK-NEXT:                          } {
# CHECK-NEXT:                            choco.ast.binary_expr() ["op" = "and"] {
# CHECK-NEXT:                              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                choco.ast.list_expr() {}
# CHECK-NEXT:                              }
# CHECK-NEXT:                            } {
# CHECK-NEXT:                              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                  choco.ast.index_expr() {
# CHECK-NEXT:                                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                        choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                                          choco.ast.index_expr() {
# CHECK-NEXT:                                            choco.ast.index_expr() {
# CHECK-NEXT:                                              choco.ast.list_expr() {}
# CHECK-NEXT:                                            } {
# CHECK-NEXT:                                              choco.ast.id_expr() ["id" = "X"]
# CHECK-NEXT:                                            }
# CHECK-NEXT:                                          } {
# CHECK-NEXT:                                            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                                    choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                                                      choco.ast.id_expr() ["id" = "F"]
# CHECK-NEXT:                                                    }
# CHECK-NEXT:                                                  }
# CHECK-NEXT:                                                }
# CHECK-NEXT:                                              }
# CHECK-NEXT:                                            }
# CHECK-NEXT:                                          }
# CHECK-NEXT:                                        }
# CHECK-NEXT:                                      }
# CHECK-NEXT:                                    }
# CHECK-NEXT:                                  } {
# CHECK-NEXT:                                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                      choco.ast.literal() ["value" = ""]
# CHECK-NEXT:                                    }
# CHECK-NEXT:                                  }
# CHECK-NEXT:                                }
# CHECK-NEXT:                              }
# CHECK-NEXT:                            }
# CHECK-NEXT:                          }
# CHECK-NEXT:                        }
# CHECK-NEXT:                      }
# CHECK-NEXT:                    }
# CHECK-NEXT:                    choco.ast.id_expr() ["id" = "N"]
# CHECK-NEXT:                    choco.ast.literal() ["value" = !choco.ast.bool<False>]
# CHECK-NEXT:                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                        choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                          choco.ast.id_expr() ["id" = "_"]
# CHECK-NEXT:                        }
# CHECK-NEXT:                      }
# CHECK-NEXT:                    }
# CHECK-NEXT:                    choco.ast.index_expr() {
# CHECK-NEXT:                      choco.ast.literal() ["value" = !choco.ast.bool<True>]
# CHECK-NEXT:                    } {
# CHECK-NEXT:                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                              choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                                choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                                  choco.ast.index_expr() {
# CHECK-NEXT:                                    choco.ast.list_expr() {}
# CHECK-NEXT:                                  } {
# CHECK-NEXT:                                    choco.ast.id_expr() ["id" = "a"]
# CHECK-NEXT:                                  }
# CHECK-NEXT:                                }
# CHECK-NEXT:                              }
# CHECK-NEXT:                            }
# CHECK-NEXT:                          }
# CHECK-NEXT:                        }
# CHECK-NEXT:                      }
# CHECK-NEXT:                    }
# CHECK-NEXT:                  }
# CHECK-NEXT:                }
# CHECK-NEXT:              }
# CHECK-NEXT:            }
# CHECK-NEXT:          } {
# CHECK-NEXT:            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:              choco.ast.id_expr() ["id" = "O__"]
# CHECK-NEXT:            }
# CHECK-NEXT:          } {
# CHECK-NEXT:            choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:              choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                  choco.ast.list_expr() {}
# CHECK-NEXT:                }
# CHECK-NEXT:              }
# CHECK-NEXT:            }
# CHECK-NEXT:          }
# CHECK-NEXT:          choco.ast.list_expr() {}
# CHECK-NEXT:        }
# CHECK-NEXT:      } {
# CHECK-NEXT:        choco.ast.if_expr() {
# CHECK-NEXT:          choco.ast.list_expr() {}
# CHECK-NEXT:        } {
# CHECK-NEXT:          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:            choco.ast.list_expr() {}
# CHECK-NEXT:          }
# CHECK-NEXT:        } {
# CHECK-NEXT:          choco.ast.id_expr() ["id" = "K"]
# CHECK-NEXT:        }
# CHECK-NEXT:      }
# CHECK-NEXT:    } {
# CHECK-NEXT:      choco.ast.pass()
# CHECK-NEXT:    } {}
# CHECK-NEXT:    choco.ast.pass()
# CHECK-NEXT:  }
# CHECK-NEXT:}
# CHECK-NEXT:
