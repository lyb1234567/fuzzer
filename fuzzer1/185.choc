# RUN: choco-opt %s | filecheck %s
def _j() -> [int]:

	nonlocal _b
	global Sn_
	ZL:object=""
	not (not -F)=B[not not -False]=-P[None[-S]]
	pass
	pass
	pass
	

pass
pass

# CHECK: module() {
# CHECK-NEXT:  choco.ast.program() {
# CHECK-NEXT:    choco.ast.func_def() ["func_name" = "_j"] {} {
# CHECK-NEXT:      choco.ast.list_type() {
# CHECK-NEXT:        choco.ast.type_name() ["type_name" = "int"]
# CHECK-NEXT:      }
# CHECK-NEXT:    } {
# CHECK-NEXT:      choco.ast.nonlocal_decl() ["decl_name" = "_b"]
# CHECK-NEXT:      choco.ast.global_decl() ["decl_name" = "Sn_"]
# CHECK-NEXT:      choco.ast.var_def() {
# CHECK-NEXT:        choco.ast.typed_var() ["var_name" = "ZL"] {
# CHECK-NEXT:          choco.ast.type_name() ["type_name" = "object"]
# CHECK-NEXT:        }
# CHECK-NEXT:      } {
# CHECK-NEXT:        choco.ast.literal() ["value" = ""]
# CHECK-NEXT:      }
# CHECK-NEXT:      choco.ast.assign() {
# CHECK-NEXT:        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:            choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:              choco.ast.id_expr() ["id" = "F"]
# CHECK-NEXT:            }
# CHECK-NEXT:          }
# CHECK-NEXT:        }
# CHECK-NEXT:      } {
# CHECK-NEXT:        choco.ast.assign() {
# CHECK-NEXT:          choco.ast.index_expr() {
# CHECK-NEXT:            choco.ast.id_expr() ["id" = "B"]
# CHECK-NEXT:          } {
# CHECK-NEXT:            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                  choco.ast.literal() ["value" = !choco.ast.bool<False>]
# CHECK-NEXT:                }
# CHECK-NEXT:              }
# CHECK-NEXT:            }
# CHECK-NEXT:          }
# CHECK-NEXT:        } {
# CHECK-NEXT:          choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:            choco.ast.index_expr() {
# CHECK-NEXT:              choco.ast.id_expr() ["id" = "P"]
# CHECK-NEXT:            } {
# CHECK-NEXT:              choco.ast.index_expr() {
# CHECK-NEXT:                choco.ast.literal() ["value" = !choco.ast.none]
# CHECK-NEXT:              } {
# CHECK-NEXT:                choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                  choco.ast.id_expr() ["id" = "S"]
# CHECK-NEXT:                }
# CHECK-NEXT:              }
# CHECK-NEXT:            }
# CHECK-NEXT:          }
# CHECK-NEXT:        }
# CHECK-NEXT:      }
# CHECK-NEXT:      choco.ast.pass()
# CHECK-NEXT:      choco.ast.pass()
# CHECK-NEXT:      choco.ast.pass()
# CHECK-NEXT:    }
# CHECK-NEXT:  } {
# CHECK-NEXT:    choco.ast.pass()
# CHECK-NEXT:    choco.ast.pass()
# CHECK-NEXT:  }
# CHECK-NEXT:}
# CHECK-NEXT:
