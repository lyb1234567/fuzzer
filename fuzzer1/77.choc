# RUN: choco-opt %s | filecheck %s
for q__t in False and _O and ky ([])[True]:

	for _ in H ([]) % Y:
	
		pass
		
	
	pass
	pass
	

pass
pass
pass

# CHECK: module() {
# CHECK-NEXT:  choco.ast.program() {} {
# CHECK-NEXT:    choco.ast.for() ["iter_name" = "q__t"] {
# CHECK-NEXT:      choco.ast.binary_expr() ["op" = "and"] {
# CHECK-NEXT:        choco.ast.binary_expr() ["op" = "and"] {
# CHECK-NEXT:          choco.ast.literal() ["value" = !choco.ast.bool<False>]
# CHECK-NEXT:        } {
# CHECK-NEXT:          choco.ast.id_expr() ["id" = "_O"]
# CHECK-NEXT:        }
# CHECK-NEXT:      } {
# CHECK-NEXT:        choco.ast.index_expr() {
# CHECK-NEXT:          choco.ast.call_expr() ["func" = "ky"] {
# CHECK-NEXT:            choco.ast.list_expr() {}
# CHECK-NEXT:          }
# CHECK-NEXT:        } {
# CHECK-NEXT:          choco.ast.literal() ["value" = !choco.ast.bool<True>]
# CHECK-NEXT:        }
# CHECK-NEXT:      }
# CHECK-NEXT:    } {
# CHECK-NEXT:      choco.ast.for() ["iter_name" = "_"] {
# CHECK-NEXT:        choco.ast.binary_expr() ["op" = "%"] {
# CHECK-NEXT:          choco.ast.call_expr() ["func" = "H"] {
# CHECK-NEXT:            choco.ast.list_expr() {}
# CHECK-NEXT:          }
# CHECK-NEXT:        } {
# CHECK-NEXT:          choco.ast.id_expr() ["id" = "Y"]
# CHECK-NEXT:        }
# CHECK-NEXT:      } {
# CHECK-NEXT:        choco.ast.pass()
# CHECK-NEXT:      }
# CHECK-NEXT:      choco.ast.pass()
# CHECK-NEXT:      choco.ast.pass()
# CHECK-NEXT:    }
# CHECK-NEXT:    choco.ast.pass()
# CHECK-NEXT:    choco.ast.pass()
# CHECK-NEXT:    choco.ast.pass()
# CHECK-NEXT:  }
# CHECK-NEXT:}
# CHECK-NEXT:
