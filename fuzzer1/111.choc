# RUN: choco-opt %s | filecheck %s
for _ in -(-[] * (not None or [] if not 3[not -xh if True else not not Q[(n)][-False]] if h[--False] else not (not not not (not -(not [][-((not None))]))) else [] and -V[--K[not True][""]] or (not "") or i[((not True))]) if -None else not not not not not not -None or True[not Q]) if not not (not not not not -[][not ([][not not not False[-J][not not not (-(not [])[not ""])]][d])[not J]]) else [][not -True[not ([])]]:

	pass
	pass
	

pass
pass
pass
pass
pass

# CHECK: module() {
# CHECK-NEXT:  choco.ast.program() {} {
# CHECK-NEXT:    choco.ast.for() ["iter_name" = "_"] {
# CHECK-NEXT:      choco.ast.if_expr() {
# CHECK-NEXT:        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                    choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                      choco.ast.index_expr() {
# CHECK-NEXT:                        choco.ast.list_expr() {}
# CHECK-NEXT:                      } {
# CHECK-NEXT:                        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                          choco.ast.index_expr() {
# CHECK-NEXT:                            choco.ast.index_expr() {
# CHECK-NEXT:                              choco.ast.index_expr() {
# CHECK-NEXT:                                choco.ast.list_expr() {}
# CHECK-NEXT:                              } {
# CHECK-NEXT:                                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                      choco.ast.index_expr() {
# CHECK-NEXT:                                        choco.ast.index_expr() {
# CHECK-NEXT:                                          choco.ast.literal() ["value" = !choco.ast.bool<False>]
# CHECK-NEXT:                                        } {
# CHECK-NEXT:                                          choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                                            choco.ast.id_expr() ["id" = "J"]
# CHECK-NEXT:                                          }
# CHECK-NEXT:                                        }
# CHECK-NEXT:                                      } {
# CHECK-NEXT:                                        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                              choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                                                choco.ast.index_expr() {
# CHECK-NEXT:                                                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                                    choco.ast.list_expr() {}
# CHECK-NEXT:                                                  }
# CHECK-NEXT:                                                } {
# CHECK-NEXT:                                                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                                    choco.ast.literal() ["value" = ""]
# CHECK-NEXT:                                                  }
# CHECK-NEXT:                                                }
# CHECK-NEXT:                                              }
# CHECK-NEXT:                                            }
# CHECK-NEXT:                                          }
# CHECK-NEXT:                                        }
# CHECK-NEXT:                                      }
# CHECK-NEXT:                                    }
# CHECK-NEXT:                                  }
# CHECK-NEXT:                                }
# CHECK-NEXT:                              }
# CHECK-NEXT:                            } {
# CHECK-NEXT:                              choco.ast.id_expr() ["id" = "d"]
# CHECK-NEXT:                            }
# CHECK-NEXT:                          } {
# CHECK-NEXT:                            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                              choco.ast.id_expr() ["id" = "J"]
# CHECK-NEXT:                            }
# CHECK-NEXT:                          }
# CHECK-NEXT:                        }
# CHECK-NEXT:                      }
# CHECK-NEXT:                    }
# CHECK-NEXT:                  }
# CHECK-NEXT:                }
# CHECK-NEXT:              }
# CHECK-NEXT:            }
# CHECK-NEXT:          }
# CHECK-NEXT:        }
# CHECK-NEXT:      } {
# CHECK-NEXT:        choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:          choco.ast.if_expr() {
# CHECK-NEXT:            choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:              choco.ast.literal() ["value" = !choco.ast.none]
# CHECK-NEXT:            }
# CHECK-NEXT:          } {
# CHECK-NEXT:            choco.ast.binary_expr() ["op" = "*"] {
# CHECK-NEXT:              choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                choco.ast.list_expr() {}
# CHECK-NEXT:              }
# CHECK-NEXT:            } {
# CHECK-NEXT:              choco.ast.if_expr() {
# CHECK-NEXT:                choco.ast.if_expr() {
# CHECK-NEXT:                  choco.ast.index_expr() {
# CHECK-NEXT:                    choco.ast.id_expr() ["id" = "h"]
# CHECK-NEXT:                  } {
# CHECK-NEXT:                    choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                      choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                        choco.ast.literal() ["value" = !choco.ast.bool<False>]
# CHECK-NEXT:                      }
# CHECK-NEXT:                    }
# CHECK-NEXT:                  }
# CHECK-NEXT:                } {
# CHECK-NEXT:                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                    choco.ast.index_expr() {
# CHECK-NEXT:                      choco.ast.literal() ["value" = 3 : !i32]
# CHECK-NEXT:                    } {
# CHECK-NEXT:                      choco.ast.if_expr() {
# CHECK-NEXT:                        choco.ast.literal() ["value" = !choco.ast.bool<True>]
# CHECK-NEXT:                      } {
# CHECK-NEXT:                        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                          choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                            choco.ast.id_expr() ["id" = "xh"]
# CHECK-NEXT:                          }
# CHECK-NEXT:                        }
# CHECK-NEXT:                      } {
# CHECK-NEXT:                        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                            choco.ast.index_expr() {
# CHECK-NEXT:                              choco.ast.index_expr() {
# CHECK-NEXT:                                choco.ast.id_expr() ["id" = "Q"]
# CHECK-NEXT:                              } {
# CHECK-NEXT:                                choco.ast.id_expr() ["id" = "n"]
# CHECK-NEXT:                              }
# CHECK-NEXT:                            } {
# CHECK-NEXT:                              choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                                choco.ast.literal() ["value" = !choco.ast.bool<False>]
# CHECK-NEXT:                              }
# CHECK-NEXT:                            }
# CHECK-NEXT:                          }
# CHECK-NEXT:                        }
# CHECK-NEXT:                      }
# CHECK-NEXT:                    }
# CHECK-NEXT:                  }
# CHECK-NEXT:                } {
# CHECK-NEXT:                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                            choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                choco.ast.index_expr() {
# CHECK-NEXT:                                  choco.ast.list_expr() {}
# CHECK-NEXT:                                } {
# CHECK-NEXT:                                  choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                      choco.ast.literal() ["value" = !choco.ast.none]
# CHECK-NEXT:                                    }
# CHECK-NEXT:                                  }
# CHECK-NEXT:                                }
# CHECK-NEXT:                              }
# CHECK-NEXT:                            }
# CHECK-NEXT:                          }
# CHECK-NEXT:                        }
# CHECK-NEXT:                      }
# CHECK-NEXT:                    }
# CHECK-NEXT:                  }
# CHECK-NEXT:                }
# CHECK-NEXT:              } {
# CHECK-NEXT:                choco.ast.binary_expr() ["op" = "or"] {
# CHECK-NEXT:                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                    choco.ast.literal() ["value" = !choco.ast.none]
# CHECK-NEXT:                  }
# CHECK-NEXT:                } {
# CHECK-NEXT:                  choco.ast.list_expr() {}
# CHECK-NEXT:                }
# CHECK-NEXT:              } {
# CHECK-NEXT:                choco.ast.binary_expr() ["op" = "or"] {
# CHECK-NEXT:                  choco.ast.binary_expr() ["op" = "or"] {
# CHECK-NEXT:                    choco.ast.binary_expr() ["op" = "and"] {
# CHECK-NEXT:                      choco.ast.list_expr() {}
# CHECK-NEXT:                    } {
# CHECK-NEXT:                      choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                        choco.ast.index_expr() {
# CHECK-NEXT:                          choco.ast.id_expr() ["id" = "V"]
# CHECK-NEXT:                        } {
# CHECK-NEXT:                          choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                            choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                              choco.ast.index_expr() {
# CHECK-NEXT:                                choco.ast.index_expr() {
# CHECK-NEXT:                                  choco.ast.id_expr() ["id" = "K"]
# CHECK-NEXT:                                } {
# CHECK-NEXT:                                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                    choco.ast.literal() ["value" = !choco.ast.bool<True>]
# CHECK-NEXT:                                  }
# CHECK-NEXT:                                }
# CHECK-NEXT:                              } {
# CHECK-NEXT:                                choco.ast.literal() ["value" = ""]
# CHECK-NEXT:                              }
# CHECK-NEXT:                            }
# CHECK-NEXT:                          }
# CHECK-NEXT:                        }
# CHECK-NEXT:                      }
# CHECK-NEXT:                    }
# CHECK-NEXT:                  } {
# CHECK-NEXT:                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                      choco.ast.literal() ["value" = ""]
# CHECK-NEXT:                    }
# CHECK-NEXT:                  }
# CHECK-NEXT:                } {
# CHECK-NEXT:                  choco.ast.index_expr() {
# CHECK-NEXT:                    choco.ast.id_expr() ["id" = "i"]
# CHECK-NEXT:                  } {
# CHECK-NEXT:                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                      choco.ast.literal() ["value" = !choco.ast.bool<True>]
# CHECK-NEXT:                    }
# CHECK-NEXT:                  }
# CHECK-NEXT:                }
# CHECK-NEXT:              }
# CHECK-NEXT:            }
# CHECK-NEXT:          } {
# CHECK-NEXT:            choco.ast.binary_expr() ["op" = "or"] {
# CHECK-NEXT:              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                          choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                            choco.ast.literal() ["value" = !choco.ast.none]
# CHECK-NEXT:                          }
# CHECK-NEXT:                        }
# CHECK-NEXT:                      }
# CHECK-NEXT:                    }
# CHECK-NEXT:                  }
# CHECK-NEXT:                }
# CHECK-NEXT:              }
# CHECK-NEXT:            } {
# CHECK-NEXT:              choco.ast.index_expr() {
# CHECK-NEXT:                choco.ast.literal() ["value" = !choco.ast.bool<True>]
# CHECK-NEXT:              } {
# CHECK-NEXT:                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                  choco.ast.id_expr() ["id" = "Q"]
# CHECK-NEXT:                }
# CHECK-NEXT:              }
# CHECK-NEXT:            }
# CHECK-NEXT:          }
# CHECK-NEXT:        }
# CHECK-NEXT:      } {
# CHECK-NEXT:        choco.ast.index_expr() {
# CHECK-NEXT:          choco.ast.list_expr() {}
# CHECK-NEXT:        } {
# CHECK-NEXT:          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:            choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:              choco.ast.index_expr() {
# CHECK-NEXT:                choco.ast.literal() ["value" = !choco.ast.bool<True>]
# CHECK-NEXT:              } {
# CHECK-NEXT:                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                  choco.ast.list_expr() {}
# CHECK-NEXT:                }
# CHECK-NEXT:              }
# CHECK-NEXT:            }
# CHECK-NEXT:          }
# CHECK-NEXT:        }
# CHECK-NEXT:      }
# CHECK-NEXT:    } {
# CHECK-NEXT:      choco.ast.pass()
# CHECK-NEXT:      choco.ast.pass()
# CHECK-NEXT:    }
# CHECK-NEXT:    choco.ast.pass()
# CHECK-NEXT:    choco.ast.pass()
# CHECK-NEXT:    choco.ast.pass()
# CHECK-NEXT:    choco.ast.pass()
# CHECK-NEXT:    choco.ast.pass()
# CHECK-NEXT:  }
# CHECK-NEXT:}
# CHECK-NEXT:
