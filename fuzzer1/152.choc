# RUN: choco-opt %s | filecheck %s
DZ:object=46
while _23 ([not not not not Tp]):

	while -"":
	
		if q[not (True)[not [][not --[][not []]]]]:
		
			pass
			pass
			pass
			
		
		else:
		
			pass
			pass
			
		
		pass
		pass
		pass
		
	
	

pass
pass

# CHECK: module() {
# CHECK-NEXT:  choco.ast.program() {
# CHECK-NEXT:    choco.ast.var_def() {
# CHECK-NEXT:      choco.ast.typed_var() ["var_name" = "DZ"] {
# CHECK-NEXT:        choco.ast.type_name() ["type_name" = "object"]
# CHECK-NEXT:      }
# CHECK-NEXT:    } {
# CHECK-NEXT:      choco.ast.literal() ["value" = 46 : !i32]
# CHECK-NEXT:    }
# CHECK-NEXT:  } {
# CHECK-NEXT:    choco.ast.while() {
# CHECK-NEXT:      choco.ast.call_expr() ["func" = "_23"] {
# CHECK-NEXT:        choco.ast.list_expr() {
# CHECK-NEXT:          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                  choco.ast.id_expr() ["id" = "Tp"]
# CHECK-NEXT:                }
# CHECK-NEXT:              }
# CHECK-NEXT:            }
# CHECK-NEXT:          }
# CHECK-NEXT:        }
# CHECK-NEXT:      }
# CHECK-NEXT:    } {
# CHECK-NEXT:      choco.ast.while() {
# CHECK-NEXT:        choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:          choco.ast.literal() ["value" = ""]
# CHECK-NEXT:        }
# CHECK-NEXT:      } {
# CHECK-NEXT:        choco.ast.if() {
# CHECK-NEXT:          choco.ast.index_expr() {
# CHECK-NEXT:            choco.ast.id_expr() ["id" = "q"]
# CHECK-NEXT:          } {
# CHECK-NEXT:            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:              choco.ast.index_expr() {
# CHECK-NEXT:                choco.ast.literal() ["value" = !choco.ast.bool<True>]
# CHECK-NEXT:              } {
# CHECK-NEXT:                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                  choco.ast.index_expr() {
# CHECK-NEXT:                    choco.ast.list_expr() {}
# CHECK-NEXT:                  } {
# CHECK-NEXT:                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                      choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                        choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                          choco.ast.index_expr() {
# CHECK-NEXT:                            choco.ast.list_expr() {}
# CHECK-NEXT:                          } {
# CHECK-NEXT:                            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                              choco.ast.list_expr() {}
# CHECK-NEXT:                            }
# CHECK-NEXT:                          }
# CHECK-NEXT:                        }
# CHECK-NEXT:                      }
# CHECK-NEXT:                    }
# CHECK-NEXT:                  }
# CHECK-NEXT:                }
# CHECK-NEXT:              }
# CHECK-NEXT:            }
# CHECK-NEXT:          }
# CHECK-NEXT:        } {
# CHECK-NEXT:          choco.ast.pass()
# CHECK-NEXT:          choco.ast.pass()
# CHECK-NEXT:          choco.ast.pass()
# CHECK-NEXT:        } {
# CHECK-NEXT:          choco.ast.pass()
# CHECK-NEXT:          choco.ast.pass()
# CHECK-NEXT:        }
# CHECK-NEXT:        choco.ast.pass()
# CHECK-NEXT:        choco.ast.pass()
# CHECK-NEXT:        choco.ast.pass()
# CHECK-NEXT:      }
# CHECK-NEXT:    }
# CHECK-NEXT:    choco.ast.pass()
# CHECK-NEXT:    choco.ast.pass()
# CHECK-NEXT:  }
# CHECK-NEXT:}
# CHECK-NEXT:
