# RUN: choco-opt %s | filecheck %s
return (not not not not j ([not _w if not not not not (not not None[not T[not not -True[[]]]]) if [] else not not not None or (S) or not ([]) if -(not []) else not False or not not not _ or not not [] else [] if True[not not ""][(not not not not V)] else not None if True else not r,None,not False,-True,f]) or not not not [] or not False[not ""] and [] or True) % ((not not not not not (not --[][[]][[]])))[not not True] - True[_] % (([])) if not [] else (True)
pass

# CHECK: module() {
# CHECK-NEXT:  choco.ast.program() {} {
# CHECK-NEXT:    choco.ast.return() {
# CHECK-NEXT:      choco.ast.if_expr() {
# CHECK-NEXT:        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:          choco.ast.list_expr() {}
# CHECK-NEXT:        }
# CHECK-NEXT:      } {
# CHECK-NEXT:        choco.ast.binary_expr() ["op" = "-"] {
# CHECK-NEXT:          choco.ast.binary_expr() ["op" = "%"] {
# CHECK-NEXT:            choco.ast.binary_expr() ["op" = "or"] {
# CHECK-NEXT:              choco.ast.binary_expr() ["op" = "or"] {
# CHECK-NEXT:                choco.ast.binary_expr() ["op" = "or"] {
# CHECK-NEXT:                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                          choco.ast.call_expr() ["func" = "j"] {
# CHECK-NEXT:                            choco.ast.list_expr() {
# CHECK-NEXT:                              choco.ast.if_expr() {
# CHECK-NEXT:                                choco.ast.if_expr() {
# CHECK-NEXT:                                  choco.ast.list_expr() {}
# CHECK-NEXT:                                } {
# CHECK-NEXT:                                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                              choco.ast.index_expr() {
# CHECK-NEXT:                                                choco.ast.literal() ["value" = !choco.ast.none]
# CHECK-NEXT:                                              } {
# CHECK-NEXT:                                                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                                  choco.ast.index_expr() {
# CHECK-NEXT:                                                    choco.ast.id_expr() ["id" = "T"]
# CHECK-NEXT:                                                  } {
# CHECK-NEXT:                                                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                                        choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                                                          choco.ast.index_expr() {
# CHECK-NEXT:                                                            choco.ast.literal() ["value" = !choco.ast.bool<True>]
# CHECK-NEXT:                                                          } {
# CHECK-NEXT:                                                            choco.ast.list_expr() {}
# CHECK-NEXT:                                                          }
# CHECK-NEXT:                                                        }
# CHECK-NEXT:                                                      }
# CHECK-NEXT:                                                    }
# CHECK-NEXT:                                                  }
# CHECK-NEXT:                                                }
# CHECK-NEXT:                                              }
# CHECK-NEXT:                                            }
# CHECK-NEXT:                                          }
# CHECK-NEXT:                                        }
# CHECK-NEXT:                                      }
# CHECK-NEXT:                                    }
# CHECK-NEXT:                                  }
# CHECK-NEXT:                                } {
# CHECK-NEXT:                                  choco.ast.if_expr() {
# CHECK-NEXT:                                    choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                        choco.ast.list_expr() {}
# CHECK-NEXT:                                      }
# CHECK-NEXT:                                    }
# CHECK-NEXT:                                  } {
# CHECK-NEXT:                                    choco.ast.binary_expr() ["op" = "or"] {
# CHECK-NEXT:                                      choco.ast.binary_expr() ["op" = "or"] {
# CHECK-NEXT:                                        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                              choco.ast.literal() ["value" = !choco.ast.none]
# CHECK-NEXT:                                            }
# CHECK-NEXT:                                          }
# CHECK-NEXT:                                        }
# CHECK-NEXT:                                      } {
# CHECK-NEXT:                                        choco.ast.id_expr() ["id" = "S"]
# CHECK-NEXT:                                      }
# CHECK-NEXT:                                    } {
# CHECK-NEXT:                                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                        choco.ast.list_expr() {}
# CHECK-NEXT:                                      }
# CHECK-NEXT:                                    }
# CHECK-NEXT:                                  } {
# CHECK-NEXT:                                    choco.ast.binary_expr() ["op" = "or"] {
# CHECK-NEXT:                                      choco.ast.binary_expr() ["op" = "or"] {
# CHECK-NEXT:                                        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                          choco.ast.literal() ["value" = !choco.ast.bool<False>]
# CHECK-NEXT:                                        }
# CHECK-NEXT:                                      } {
# CHECK-NEXT:                                        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                              choco.ast.id_expr() ["id" = "_"]
# CHECK-NEXT:                                            }
# CHECK-NEXT:                                          }
# CHECK-NEXT:                                        }
# CHECK-NEXT:                                      }
# CHECK-NEXT:                                    } {
# CHECK-NEXT:                                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                          choco.ast.list_expr() {}
# CHECK-NEXT:                                        }
# CHECK-NEXT:                                      }
# CHECK-NEXT:                                    }
# CHECK-NEXT:                                  }
# CHECK-NEXT:                                }
# CHECK-NEXT:                              } {
# CHECK-NEXT:                                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                  choco.ast.id_expr() ["id" = "_w"]
# CHECK-NEXT:                                }
# CHECK-NEXT:                              } {
# CHECK-NEXT:                                choco.ast.if_expr() {
# CHECK-NEXT:                                  choco.ast.index_expr() {
# CHECK-NEXT:                                    choco.ast.index_expr() {
# CHECK-NEXT:                                      choco.ast.literal() ["value" = !choco.ast.bool<True>]
# CHECK-NEXT:                                    } {
# CHECK-NEXT:                                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                          choco.ast.literal() ["value" = ""]
# CHECK-NEXT:                                        }
# CHECK-NEXT:                                      }
# CHECK-NEXT:                                    }
# CHECK-NEXT:                                  } {
# CHECK-NEXT:                                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                            choco.ast.id_expr() ["id" = "V"]
# CHECK-NEXT:                                          }
# CHECK-NEXT:                                        }
# CHECK-NEXT:                                      }
# CHECK-NEXT:                                    }
# CHECK-NEXT:                                  }
# CHECK-NEXT:                                } {
# CHECK-NEXT:                                  choco.ast.list_expr() {}
# CHECK-NEXT:                                } {
# CHECK-NEXT:                                  choco.ast.if_expr() {
# CHECK-NEXT:                                    choco.ast.literal() ["value" = !choco.ast.bool<True>]
# CHECK-NEXT:                                  } {
# CHECK-NEXT:                                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                      choco.ast.literal() ["value" = !choco.ast.none]
# CHECK-NEXT:                                    }
# CHECK-NEXT:                                  } {
# CHECK-NEXT:                                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                      choco.ast.id_expr() ["id" = "r"]
# CHECK-NEXT:                                    }
# CHECK-NEXT:                                  }
# CHECK-NEXT:                                }
# CHECK-NEXT:                              }
# CHECK-NEXT:                              choco.ast.literal() ["value" = !choco.ast.none]
# CHECK-NEXT:                              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                choco.ast.literal() ["value" = !choco.ast.bool<False>]
# CHECK-NEXT:                              }
# CHECK-NEXT:                              choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                                choco.ast.literal() ["value" = !choco.ast.bool<True>]
# CHECK-NEXT:                              }
# CHECK-NEXT:                              choco.ast.id_expr() ["id" = "f"]
# CHECK-NEXT:                            }
# CHECK-NEXT:                          }
# CHECK-NEXT:                        }
# CHECK-NEXT:                      }
# CHECK-NEXT:                    }
# CHECK-NEXT:                  }
# CHECK-NEXT:                } {
# CHECK-NEXT:                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                        choco.ast.list_expr() {}
# CHECK-NEXT:                      }
# CHECK-NEXT:                    }
# CHECK-NEXT:                  }
# CHECK-NEXT:                }
# CHECK-NEXT:              } {
# CHECK-NEXT:                choco.ast.binary_expr() ["op" = "and"] {
# CHECK-NEXT:                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                    choco.ast.index_expr() {
# CHECK-NEXT:                      choco.ast.literal() ["value" = !choco.ast.bool<False>]
# CHECK-NEXT:                    } {
# CHECK-NEXT:                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                        choco.ast.literal() ["value" = ""]
# CHECK-NEXT:                      }
# CHECK-NEXT:                    }
# CHECK-NEXT:                  }
# CHECK-NEXT:                } {
# CHECK-NEXT:                  choco.ast.list_expr() {}
# CHECK-NEXT:                }
# CHECK-NEXT:              }
# CHECK-NEXT:            } {
# CHECK-NEXT:              choco.ast.literal() ["value" = !choco.ast.bool<True>]
# CHECK-NEXT:            }
# CHECK-NEXT:          } {
# CHECK-NEXT:            choco.ast.index_expr() {
# CHECK-NEXT:              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                          choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                            choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                              choco.ast.index_expr() {
# CHECK-NEXT:                                choco.ast.index_expr() {
# CHECK-NEXT:                                  choco.ast.list_expr() {}
# CHECK-NEXT:                                } {
# CHECK-NEXT:                                  choco.ast.list_expr() {}
# CHECK-NEXT:                                }
# CHECK-NEXT:                              } {
# CHECK-NEXT:                                choco.ast.list_expr() {}
# CHECK-NEXT:                              }
# CHECK-NEXT:                            }
# CHECK-NEXT:                          }
# CHECK-NEXT:                        }
# CHECK-NEXT:                      }
# CHECK-NEXT:                    }
# CHECK-NEXT:                  }
# CHECK-NEXT:                }
# CHECK-NEXT:              }
# CHECK-NEXT:            } {
# CHECK-NEXT:              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                  choco.ast.literal() ["value" = !choco.ast.bool<True>]
# CHECK-NEXT:                }
# CHECK-NEXT:              }
# CHECK-NEXT:            }
# CHECK-NEXT:          }
# CHECK-NEXT:        } {
# CHECK-NEXT:          choco.ast.binary_expr() ["op" = "%"] {
# CHECK-NEXT:            choco.ast.index_expr() {
# CHECK-NEXT:              choco.ast.literal() ["value" = !choco.ast.bool<True>]
# CHECK-NEXT:            } {
# CHECK-NEXT:              choco.ast.id_expr() ["id" = "_"]
# CHECK-NEXT:            }
# CHECK-NEXT:          } {
# CHECK-NEXT:            choco.ast.list_expr() {}
# CHECK-NEXT:          }
# CHECK-NEXT:        }
# CHECK-NEXT:      } {
# CHECK-NEXT:        choco.ast.literal() ["value" = !choco.ast.bool<True>]
# CHECK-NEXT:      }
# CHECK-NEXT:    }
# CHECK-NEXT:    choco.ast.pass()
# CHECK-NEXT:  }
# CHECK-NEXT:}
# CHECK-NEXT:
