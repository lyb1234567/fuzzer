# RUN: choco-opt %s | filecheck %s
while not A ([]) if True and not not [_9s ([not (not not [] if True else not not not (not _[not []]) if not not not not not not True else not -u[-[][-True[[][([])]]]] and not not t if a else "" if not not not not F else h and [] and [])]),([])[m],(not not not not (None)),_,not not None] and not not (not not not -C)[not not not not not not o[(None)][""]] and not -[][-(not ((not h)))][-None[o]][not not not not not (None)][not ""] if not n[(not not q)] else True[not not --B[-_]] if not not (not not not not not not Y[not True])[O] else not [] if not -False else "" else [] if [] else -V:

	pass
	


# CHECK: module() {
# CHECK-NEXT:  choco.ast.program() {} {
# CHECK-NEXT:    choco.ast.while() {
# CHECK-NEXT:      choco.ast.if_expr() {
# CHECK-NEXT:        choco.ast.if_expr() {
# CHECK-NEXT:          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:            choco.ast.index_expr() {
# CHECK-NEXT:              choco.ast.id_expr() ["id" = "n"]
# CHECK-NEXT:            } {
# CHECK-NEXT:              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                  choco.ast.id_expr() ["id" = "q"]
# CHECK-NEXT:                }
# CHECK-NEXT:              }
# CHECK-NEXT:            }
# CHECK-NEXT:          }
# CHECK-NEXT:        } {
# CHECK-NEXT:          choco.ast.binary_expr() ["op" = "and"] {
# CHECK-NEXT:            choco.ast.binary_expr() ["op" = "and"] {
# CHECK-NEXT:              choco.ast.binary_expr() ["op" = "and"] {
# CHECK-NEXT:                choco.ast.literal() ["value" = !choco.ast.bool<True>]
# CHECK-NEXT:              } {
# CHECK-NEXT:                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                    choco.ast.list_expr() {
# CHECK-NEXT:                      choco.ast.call_expr() ["func" = "_9s"] {
# CHECK-NEXT:                        choco.ast.list_expr() {
# CHECK-NEXT:                          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                            choco.ast.if_expr() {
# CHECK-NEXT:                              choco.ast.literal() ["value" = !choco.ast.bool<True>]
# CHECK-NEXT:                            } {
# CHECK-NEXT:                              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                  choco.ast.list_expr() {}
# CHECK-NEXT:                                }
# CHECK-NEXT:                              }
# CHECK-NEXT:                            } {
# CHECK-NEXT:                              choco.ast.if_expr() {
# CHECK-NEXT:                                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                            choco.ast.literal() ["value" = !choco.ast.bool<True>]
# CHECK-NEXT:                                          }
# CHECK-NEXT:                                        }
# CHECK-NEXT:                                      }
# CHECK-NEXT:                                    }
# CHECK-NEXT:                                  }
# CHECK-NEXT:                                }
# CHECK-NEXT:                              } {
# CHECK-NEXT:                                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                        choco.ast.index_expr() {
# CHECK-NEXT:                                          choco.ast.id_expr() ["id" = "_"]
# CHECK-NEXT:                                        } {
# CHECK-NEXT:                                          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                            choco.ast.list_expr() {}
# CHECK-NEXT:                                          }
# CHECK-NEXT:                                        }
# CHECK-NEXT:                                      }
# CHECK-NEXT:                                    }
# CHECK-NEXT:                                  }
# CHECK-NEXT:                                }
# CHECK-NEXT:                              } {
# CHECK-NEXT:                                choco.ast.if_expr() {
# CHECK-NEXT:                                  choco.ast.id_expr() ["id" = "a"]
# CHECK-NEXT:                                } {
# CHECK-NEXT:                                  choco.ast.binary_expr() ["op" = "and"] {
# CHECK-NEXT:                                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                      choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                                        choco.ast.index_expr() {
# CHECK-NEXT:                                          choco.ast.id_expr() ["id" = "u"]
# CHECK-NEXT:                                        } {
# CHECK-NEXT:                                          choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                                            choco.ast.index_expr() {
# CHECK-NEXT:                                              choco.ast.list_expr() {}
# CHECK-NEXT:                                            } {
# CHECK-NEXT:                                              choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                                                choco.ast.index_expr() {
# CHECK-NEXT:                                                  choco.ast.literal() ["value" = !choco.ast.bool<True>]
# CHECK-NEXT:                                                } {
# CHECK-NEXT:                                                  choco.ast.index_expr() {
# CHECK-NEXT:                                                    choco.ast.list_expr() {}
# CHECK-NEXT:                                                  } {
# CHECK-NEXT:                                                    choco.ast.list_expr() {}
# CHECK-NEXT:                                                  }
# CHECK-NEXT:                                                }
# CHECK-NEXT:                                              }
# CHECK-NEXT:                                            }
# CHECK-NEXT:                                          }
# CHECK-NEXT:                                        }
# CHECK-NEXT:                                      }
# CHECK-NEXT:                                    }
# CHECK-NEXT:                                  } {
# CHECK-NEXT:                                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                        choco.ast.id_expr() ["id" = "t"]
# CHECK-NEXT:                                      }
# CHECK-NEXT:                                    }
# CHECK-NEXT:                                  }
# CHECK-NEXT:                                } {
# CHECK-NEXT:                                  choco.ast.if_expr() {
# CHECK-NEXT:                                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                            choco.ast.id_expr() ["id" = "F"]
# CHECK-NEXT:                                          }
# CHECK-NEXT:                                        }
# CHECK-NEXT:                                      }
# CHECK-NEXT:                                    }
# CHECK-NEXT:                                  } {
# CHECK-NEXT:                                    choco.ast.literal() ["value" = ""]
# CHECK-NEXT:                                  } {
# CHECK-NEXT:                                    choco.ast.binary_expr() ["op" = "and"] {
# CHECK-NEXT:                                      choco.ast.binary_expr() ["op" = "and"] {
# CHECK-NEXT:                                        choco.ast.id_expr() ["id" = "h"]
# CHECK-NEXT:                                      } {
# CHECK-NEXT:                                        choco.ast.list_expr() {}
# CHECK-NEXT:                                      }
# CHECK-NEXT:                                    } {
# CHECK-NEXT:                                      choco.ast.list_expr() {}
# CHECK-NEXT:                                    }
# CHECK-NEXT:                                  }
# CHECK-NEXT:                                }
# CHECK-NEXT:                              }
# CHECK-NEXT:                            }
# CHECK-NEXT:                          }
# CHECK-NEXT:                        }
# CHECK-NEXT:                      }
# CHECK-NEXT:                      choco.ast.index_expr() {
# CHECK-NEXT:                        choco.ast.list_expr() {}
# CHECK-NEXT:                      } {
# CHECK-NEXT:                        choco.ast.id_expr() ["id" = "m"]
# CHECK-NEXT:                      }
# CHECK-NEXT:                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                              choco.ast.literal() ["value" = !choco.ast.none]
# CHECK-NEXT:                            }
# CHECK-NEXT:                          }
# CHECK-NEXT:                        }
# CHECK-NEXT:                      }
# CHECK-NEXT:                      choco.ast.id_expr() ["id" = "_"]
# CHECK-NEXT:                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                          choco.ast.literal() ["value" = !choco.ast.none]
# CHECK-NEXT:                        }
# CHECK-NEXT:                      }
# CHECK-NEXT:                    }
# CHECK-NEXT:                  }
# CHECK-NEXT:                }
# CHECK-NEXT:              }
# CHECK-NEXT:            } {
# CHECK-NEXT:              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                  choco.ast.index_expr() {
# CHECK-NEXT:                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                          choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                            choco.ast.id_expr() ["id" = "C"]
# CHECK-NEXT:                          }
# CHECK-NEXT:                        }
# CHECK-NEXT:                      }
# CHECK-NEXT:                    }
# CHECK-NEXT:                  } {
# CHECK-NEXT:                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                choco.ast.index_expr() {
# CHECK-NEXT:                                  choco.ast.index_expr() {
# CHECK-NEXT:                                    choco.ast.id_expr() ["id" = "o"]
# CHECK-NEXT:                                  } {
# CHECK-NEXT:                                    choco.ast.literal() ["value" = !choco.ast.none]
# CHECK-NEXT:                                  }
# CHECK-NEXT:                                } {
# CHECK-NEXT:                                  choco.ast.literal() ["value" = ""]
# CHECK-NEXT:                                }
# CHECK-NEXT:                              }
# CHECK-NEXT:                            }
# CHECK-NEXT:                          }
# CHECK-NEXT:                        }
# CHECK-NEXT:                      }
# CHECK-NEXT:                    }
# CHECK-NEXT:                  }
# CHECK-NEXT:                }
# CHECK-NEXT:              }
# CHECK-NEXT:            }
# CHECK-NEXT:          } {
# CHECK-NEXT:            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:              choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                choco.ast.index_expr() {
# CHECK-NEXT:                  choco.ast.index_expr() {
# CHECK-NEXT:                    choco.ast.index_expr() {
# CHECK-NEXT:                      choco.ast.index_expr() {
# CHECK-NEXT:                        choco.ast.list_expr() {}
# CHECK-NEXT:                      } {
# CHECK-NEXT:                        choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                              choco.ast.id_expr() ["id" = "h"]
# CHECK-NEXT:                            }
# CHECK-NEXT:                          }
# CHECK-NEXT:                        }
# CHECK-NEXT:                      }
# CHECK-NEXT:                    } {
# CHECK-NEXT:                      choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                        choco.ast.index_expr() {
# CHECK-NEXT:                          choco.ast.literal() ["value" = !choco.ast.none]
# CHECK-NEXT:                        } {
# CHECK-NEXT:                          choco.ast.id_expr() ["id" = "o"]
# CHECK-NEXT:                        }
# CHECK-NEXT:                      }
# CHECK-NEXT:                    }
# CHECK-NEXT:                  } {
# CHECK-NEXT:                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                              choco.ast.literal() ["value" = !choco.ast.none]
# CHECK-NEXT:                            }
# CHECK-NEXT:                          }
# CHECK-NEXT:                        }
# CHECK-NEXT:                      }
# CHECK-NEXT:                    }
# CHECK-NEXT:                  }
# CHECK-NEXT:                } {
# CHECK-NEXT:                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                    choco.ast.literal() ["value" = ""]
# CHECK-NEXT:                  }
# CHECK-NEXT:                }
# CHECK-NEXT:              }
# CHECK-NEXT:            }
# CHECK-NEXT:          }
# CHECK-NEXT:        } {
# CHECK-NEXT:          choco.ast.if_expr() {
# CHECK-NEXT:            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                choco.ast.index_expr() {
# CHECK-NEXT:                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                              choco.ast.index_expr() {
# CHECK-NEXT:                                choco.ast.id_expr() ["id" = "Y"]
# CHECK-NEXT:                              } {
# CHECK-NEXT:                                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                  choco.ast.literal() ["value" = !choco.ast.bool<True>]
# CHECK-NEXT:                                }
# CHECK-NEXT:                              }
# CHECK-NEXT:                            }
# CHECK-NEXT:                          }
# CHECK-NEXT:                        }
# CHECK-NEXT:                      }
# CHECK-NEXT:                    }
# CHECK-NEXT:                  }
# CHECK-NEXT:                } {
# CHECK-NEXT:                  choco.ast.id_expr() ["id" = "O"]
# CHECK-NEXT:                }
# CHECK-NEXT:              }
# CHECK-NEXT:            }
# CHECK-NEXT:          } {
# CHECK-NEXT:            choco.ast.index_expr() {
# CHECK-NEXT:              choco.ast.literal() ["value" = !choco.ast.bool<True>]
# CHECK-NEXT:            } {
# CHECK-NEXT:              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                  choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                    choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                      choco.ast.index_expr() {
# CHECK-NEXT:                        choco.ast.id_expr() ["id" = "B"]
# CHECK-NEXT:                      } {
# CHECK-NEXT:                        choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                          choco.ast.id_expr() ["id" = "_"]
# CHECK-NEXT:                        }
# CHECK-NEXT:                      }
# CHECK-NEXT:                    }
# CHECK-NEXT:                  }
# CHECK-NEXT:                }
# CHECK-NEXT:              }
# CHECK-NEXT:            }
# CHECK-NEXT:          } {
# CHECK-NEXT:            choco.ast.if_expr() {
# CHECK-NEXT:              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                  choco.ast.literal() ["value" = !choco.ast.bool<False>]
# CHECK-NEXT:                }
# CHECK-NEXT:              }
# CHECK-NEXT:            } {
# CHECK-NEXT:              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                choco.ast.list_expr() {}
# CHECK-NEXT:              }
# CHECK-NEXT:            } {
# CHECK-NEXT:              choco.ast.literal() ["value" = ""]
# CHECK-NEXT:            }
# CHECK-NEXT:          }
# CHECK-NEXT:        }
# CHECK-NEXT:      } {
# CHECK-NEXT:        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:          choco.ast.call_expr() ["func" = "A"] {
# CHECK-NEXT:            choco.ast.list_expr() {}
# CHECK-NEXT:          }
# CHECK-NEXT:        }
# CHECK-NEXT:      } {
# CHECK-NEXT:        choco.ast.if_expr() {
# CHECK-NEXT:          choco.ast.list_expr() {}
# CHECK-NEXT:        } {
# CHECK-NEXT:          choco.ast.list_expr() {}
# CHECK-NEXT:        } {
# CHECK-NEXT:          choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:            choco.ast.id_expr() ["id" = "V"]
# CHECK-NEXT:          }
# CHECK-NEXT:        }
# CHECK-NEXT:      }
# CHECK-NEXT:    } {
# CHECK-NEXT:      choco.ast.pass()
# CHECK-NEXT:    }
# CHECK-NEXT:  }
# CHECK-NEXT:}
# CHECK-NEXT:
