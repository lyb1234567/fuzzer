# RUN: choco-opt %s | filecheck %s
def x(m_93:int) -> object:

	while T___:
	
		pass
		while (not not -[])[[]][X]:
		
			pass
			pass
			
		
		
	
	pass
	

pass
pass
pass

# CHECK: module() {
# CHECK-NEXT:  choco.ast.program() {
# CHECK-NEXT:    choco.ast.func_def() ["func_name" = "x"] {
# CHECK-NEXT:      choco.ast.typed_var() ["var_name" = "m_93"] {
# CHECK-NEXT:        choco.ast.type_name() ["type_name" = "int"]
# CHECK-NEXT:      }
# CHECK-NEXT:    } {
# CHECK-NEXT:      choco.ast.type_name() ["type_name" = "object"]
# CHECK-NEXT:    } {
# CHECK-NEXT:      choco.ast.while() {
# CHECK-NEXT:        choco.ast.id_expr() ["id" = "T___"]
# CHECK-NEXT:      } {
# CHECK-NEXT:        choco.ast.pass()
# CHECK-NEXT:        choco.ast.while() {
# CHECK-NEXT:          choco.ast.index_expr() {
# CHECK-NEXT:            choco.ast.index_expr() {
# CHECK-NEXT:              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                  choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                    choco.ast.list_expr() {}
# CHECK-NEXT:                  }
# CHECK-NEXT:                }
# CHECK-NEXT:              }
# CHECK-NEXT:            } {
# CHECK-NEXT:              choco.ast.list_expr() {}
# CHECK-NEXT:            }
# CHECK-NEXT:          } {
# CHECK-NEXT:            choco.ast.id_expr() ["id" = "X"]
# CHECK-NEXT:          }
# CHECK-NEXT:        } {
# CHECK-NEXT:          choco.ast.pass()
# CHECK-NEXT:          choco.ast.pass()
# CHECK-NEXT:        }
# CHECK-NEXT:      }
# CHECK-NEXT:      choco.ast.pass()
# CHECK-NEXT:    }
# CHECK-NEXT:  } {
# CHECK-NEXT:    choco.ast.pass()
# CHECK-NEXT:    choco.ast.pass()
# CHECK-NEXT:    choco.ast.pass()
# CHECK-NEXT:  }
# CHECK-NEXT:}
# CHECK-NEXT:
