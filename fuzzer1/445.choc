# RUN: choco-opt %s | filecheck %s
for _W in not not not (not not not not not not __ (["" if True else not not not "" if [][o[[]]][[][not not -[]]] else None and not (V) and True,_[not not not not K],not "",not -_,[]]) or not "" if not not [] else not A[(None)] and not (_) and "" if not -u else not not False and --True and [][[]] or not not not not not not -(-True[[]]) and h if not -n[P] else -[] if not (not not not not not -[][m][not not not not not not not False[[]]]) else [] or (not not not "") if False else False) or not True or not "" if not -((not not -[])[not (-False)][not False])[not not not -False][_][not []] else not not []:

	pass
	


# CHECK: module() {
# CHECK-NEXT:  choco.ast.program() {} {
# CHECK-NEXT:    choco.ast.for() ["iter_name" = "_W"] {
# CHECK-NEXT:      choco.ast.if_expr() {
# CHECK-NEXT:        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:          choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:            choco.ast.index_expr() {
# CHECK-NEXT:              choco.ast.index_expr() {
# CHECK-NEXT:                choco.ast.index_expr() {
# CHECK-NEXT:                  choco.ast.index_expr() {
# CHECK-NEXT:                    choco.ast.index_expr() {
# CHECK-NEXT:                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                          choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                            choco.ast.list_expr() {}
# CHECK-NEXT:                          }
# CHECK-NEXT:                        }
# CHECK-NEXT:                      }
# CHECK-NEXT:                    } {
# CHECK-NEXT:                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                        choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                          choco.ast.literal() ["value" = !choco.ast.bool<False>]
# CHECK-NEXT:                        }
# CHECK-NEXT:                      }
# CHECK-NEXT:                    }
# CHECK-NEXT:                  } {
# CHECK-NEXT:                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                      choco.ast.literal() ["value" = !choco.ast.bool<False>]
# CHECK-NEXT:                    }
# CHECK-NEXT:                  }
# CHECK-NEXT:                } {
# CHECK-NEXT:                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                        choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                          choco.ast.literal() ["value" = !choco.ast.bool<False>]
# CHECK-NEXT:                        }
# CHECK-NEXT:                      }
# CHECK-NEXT:                    }
# CHECK-NEXT:                  }
# CHECK-NEXT:                }
# CHECK-NEXT:              } {
# CHECK-NEXT:                choco.ast.id_expr() ["id" = "_"]
# CHECK-NEXT:              }
# CHECK-NEXT:            } {
# CHECK-NEXT:              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                choco.ast.list_expr() {}
# CHECK-NEXT:              }
# CHECK-NEXT:            }
# CHECK-NEXT:          }
# CHECK-NEXT:        }
# CHECK-NEXT:      } {
# CHECK-NEXT:        choco.ast.binary_expr() ["op" = "or"] {
# CHECK-NEXT:          choco.ast.binary_expr() ["op" = "or"] {
# CHECK-NEXT:            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                  choco.ast.if_expr() {
# CHECK-NEXT:                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                        choco.ast.list_expr() {}
# CHECK-NEXT:                      }
# CHECK-NEXT:                    }
# CHECK-NEXT:                  } {
# CHECK-NEXT:                    choco.ast.binary_expr() ["op" = "or"] {
# CHECK-NEXT:                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                  choco.ast.call_expr() ["func" = "__"] {
# CHECK-NEXT:                                    choco.ast.list_expr() {
# CHECK-NEXT:                                      choco.ast.if_expr() {
# CHECK-NEXT:                                        choco.ast.literal() ["value" = !choco.ast.bool<True>]
# CHECK-NEXT:                                      } {
# CHECK-NEXT:                                        choco.ast.literal() ["value" = ""]
# CHECK-NEXT:                                      } {
# CHECK-NEXT:                                        choco.ast.if_expr() {
# CHECK-NEXT:                                          choco.ast.index_expr() {
# CHECK-NEXT:                                            choco.ast.index_expr() {
# CHECK-NEXT:                                              choco.ast.list_expr() {}
# CHECK-NEXT:                                            } {
# CHECK-NEXT:                                              choco.ast.index_expr() {
# CHECK-NEXT:                                                choco.ast.id_expr() ["id" = "o"]
# CHECK-NEXT:                                              } {
# CHECK-NEXT:                                                choco.ast.list_expr() {}
# CHECK-NEXT:                                              }
# CHECK-NEXT:                                            }
# CHECK-NEXT:                                          } {
# CHECK-NEXT:                                            choco.ast.index_expr() {
# CHECK-NEXT:                                              choco.ast.list_expr() {}
# CHECK-NEXT:                                            } {
# CHECK-NEXT:                                              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                                  choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                                                    choco.ast.list_expr() {}
# CHECK-NEXT:                                                  }
# CHECK-NEXT:                                                }
# CHECK-NEXT:                                              }
# CHECK-NEXT:                                            }
# CHECK-NEXT:                                          }
# CHECK-NEXT:                                        } {
# CHECK-NEXT:                                          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                                choco.ast.literal() ["value" = ""]
# CHECK-NEXT:                                              }
# CHECK-NEXT:                                            }
# CHECK-NEXT:                                          }
# CHECK-NEXT:                                        } {
# CHECK-NEXT:                                          choco.ast.binary_expr() ["op" = "and"] {
# CHECK-NEXT:                                            choco.ast.binary_expr() ["op" = "and"] {
# CHECK-NEXT:                                              choco.ast.literal() ["value" = !choco.ast.none]
# CHECK-NEXT:                                            } {
# CHECK-NEXT:                                              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                                choco.ast.id_expr() ["id" = "V"]
# CHECK-NEXT:                                              }
# CHECK-NEXT:                                            }
# CHECK-NEXT:                                          } {
# CHECK-NEXT:                                            choco.ast.literal() ["value" = !choco.ast.bool<True>]
# CHECK-NEXT:                                          }
# CHECK-NEXT:                                        }
# CHECK-NEXT:                                      }
# CHECK-NEXT:                                      choco.ast.index_expr() {
# CHECK-NEXT:                                        choco.ast.id_expr() ["id" = "_"]
# CHECK-NEXT:                                      } {
# CHECK-NEXT:                                        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                                choco.ast.id_expr() ["id" = "K"]
# CHECK-NEXT:                                              }
# CHECK-NEXT:                                            }
# CHECK-NEXT:                                          }
# CHECK-NEXT:                                        }
# CHECK-NEXT:                                      }
# CHECK-NEXT:                                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                        choco.ast.literal() ["value" = ""]
# CHECK-NEXT:                                      }
# CHECK-NEXT:                                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                        choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                                          choco.ast.id_expr() ["id" = "_"]
# CHECK-NEXT:                                        }
# CHECK-NEXT:                                      }
# CHECK-NEXT:                                      choco.ast.list_expr() {}
# CHECK-NEXT:                                    }
# CHECK-NEXT:                                  }
# CHECK-NEXT:                                }
# CHECK-NEXT:                              }
# CHECK-NEXT:                            }
# CHECK-NEXT:                          }
# CHECK-NEXT:                        }
# CHECK-NEXT:                      }
# CHECK-NEXT:                    } {
# CHECK-NEXT:                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                        choco.ast.literal() ["value" = ""]
# CHECK-NEXT:                      }
# CHECK-NEXT:                    }
# CHECK-NEXT:                  } {
# CHECK-NEXT:                    choco.ast.if_expr() {
# CHECK-NEXT:                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                        choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                          choco.ast.id_expr() ["id" = "u"]
# CHECK-NEXT:                        }
# CHECK-NEXT:                      }
# CHECK-NEXT:                    } {
# CHECK-NEXT:                      choco.ast.binary_expr() ["op" = "and"] {
# CHECK-NEXT:                        choco.ast.binary_expr() ["op" = "and"] {
# CHECK-NEXT:                          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                            choco.ast.index_expr() {
# CHECK-NEXT:                              choco.ast.id_expr() ["id" = "A"]
# CHECK-NEXT:                            } {
# CHECK-NEXT:                              choco.ast.literal() ["value" = !choco.ast.none]
# CHECK-NEXT:                            }
# CHECK-NEXT:                          }
# CHECK-NEXT:                        } {
# CHECK-NEXT:                          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                            choco.ast.id_expr() ["id" = "_"]
# CHECK-NEXT:                          }
# CHECK-NEXT:                        }
# CHECK-NEXT:                      } {
# CHECK-NEXT:                        choco.ast.literal() ["value" = ""]
# CHECK-NEXT:                      }
# CHECK-NEXT:                    } {
# CHECK-NEXT:                      choco.ast.if_expr() {
# CHECK-NEXT:                        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                          choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                            choco.ast.index_expr() {
# CHECK-NEXT:                              choco.ast.id_expr() ["id" = "n"]
# CHECK-NEXT:                            } {
# CHECK-NEXT:                              choco.ast.id_expr() ["id" = "P"]
# CHECK-NEXT:                            }
# CHECK-NEXT:                          }
# CHECK-NEXT:                        }
# CHECK-NEXT:                      } {
# CHECK-NEXT:                        choco.ast.binary_expr() ["op" = "or"] {
# CHECK-NEXT:                          choco.ast.binary_expr() ["op" = "and"] {
# CHECK-NEXT:                            choco.ast.binary_expr() ["op" = "and"] {
# CHECK-NEXT:                              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                  choco.ast.literal() ["value" = !choco.ast.bool<False>]
# CHECK-NEXT:                                }
# CHECK-NEXT:                              }
# CHECK-NEXT:                            } {
# CHECK-NEXT:                              choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                                choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                                  choco.ast.literal() ["value" = !choco.ast.bool<True>]
# CHECK-NEXT:                                }
# CHECK-NEXT:                              }
# CHECK-NEXT:                            }
# CHECK-NEXT:                          } {
# CHECK-NEXT:                            choco.ast.index_expr() {
# CHECK-NEXT:                              choco.ast.list_expr() {}
# CHECK-NEXT:                            } {
# CHECK-NEXT:                              choco.ast.list_expr() {}
# CHECK-NEXT:                            }
# CHECK-NEXT:                          }
# CHECK-NEXT:                        } {
# CHECK-NEXT:                          choco.ast.binary_expr() ["op" = "and"] {
# CHECK-NEXT:                            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                        choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                                          choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                                            choco.ast.index_expr() {
# CHECK-NEXT:                                              choco.ast.literal() ["value" = !choco.ast.bool<True>]
# CHECK-NEXT:                                            } {
# CHECK-NEXT:                                              choco.ast.list_expr() {}
# CHECK-NEXT:                                            }
# CHECK-NEXT:                                          }
# CHECK-NEXT:                                        }
# CHECK-NEXT:                                      }
# CHECK-NEXT:                                    }
# CHECK-NEXT:                                  }
# CHECK-NEXT:                                }
# CHECK-NEXT:                              }
# CHECK-NEXT:                            }
# CHECK-NEXT:                          } {
# CHECK-NEXT:                            choco.ast.id_expr() ["id" = "h"]
# CHECK-NEXT:                          }
# CHECK-NEXT:                        }
# CHECK-NEXT:                      } {
# CHECK-NEXT:                        choco.ast.if_expr() {
# CHECK-NEXT:                          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                      choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                                        choco.ast.index_expr() {
# CHECK-NEXT:                                          choco.ast.index_expr() {
# CHECK-NEXT:                                            choco.ast.list_expr() {}
# CHECK-NEXT:                                          } {
# CHECK-NEXT:                                            choco.ast.id_expr() ["id" = "m"]
# CHECK-NEXT:                                          }
# CHECK-NEXT:                                        } {
# CHECK-NEXT:                                          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                                        choco.ast.index_expr() {
# CHECK-NEXT:                                                          choco.ast.literal() ["value" = !choco.ast.bool<False>]
# CHECK-NEXT:                                                        } {
# CHECK-NEXT:                                                          choco.ast.list_expr() {}
# CHECK-NEXT:                                                        }
# CHECK-NEXT:                                                      }
# CHECK-NEXT:                                                    }
# CHECK-NEXT:                                                  }
# CHECK-NEXT:                                                }
# CHECK-NEXT:                                              }
# CHECK-NEXT:                                            }
# CHECK-NEXT:                                          }
# CHECK-NEXT:                                        }
# CHECK-NEXT:                                      }
# CHECK-NEXT:                                    }
# CHECK-NEXT:                                  }
# CHECK-NEXT:                                }
# CHECK-NEXT:                              }
# CHECK-NEXT:                            }
# CHECK-NEXT:                          }
# CHECK-NEXT:                        } {
# CHECK-NEXT:                          choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                            choco.ast.list_expr() {}
# CHECK-NEXT:                          }
# CHECK-NEXT:                        } {
# CHECK-NEXT:                          choco.ast.if_expr() {
# CHECK-NEXT:                            choco.ast.literal() ["value" = !choco.ast.bool<False>]
# CHECK-NEXT:                          } {
# CHECK-NEXT:                            choco.ast.binary_expr() ["op" = "or"] {
# CHECK-NEXT:                              choco.ast.list_expr() {}
# CHECK-NEXT:                            } {
# CHECK-NEXT:                              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                    choco.ast.literal() ["value" = ""]
# CHECK-NEXT:                                  }
# CHECK-NEXT:                                }
# CHECK-NEXT:                              }
# CHECK-NEXT:                            }
# CHECK-NEXT:                          } {
# CHECK-NEXT:                            choco.ast.literal() ["value" = !choco.ast.bool<False>]
# CHECK-NEXT:                          }
# CHECK-NEXT:                        }
# CHECK-NEXT:                      }
# CHECK-NEXT:                    }
# CHECK-NEXT:                  }
# CHECK-NEXT:                }
# CHECK-NEXT:              }
# CHECK-NEXT:            }
# CHECK-NEXT:          } {
# CHECK-NEXT:            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:              choco.ast.literal() ["value" = !choco.ast.bool<True>]
# CHECK-NEXT:            }
# CHECK-NEXT:          }
# CHECK-NEXT:        } {
# CHECK-NEXT:          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:            choco.ast.literal() ["value" = ""]
# CHECK-NEXT:          }
# CHECK-NEXT:        }
# CHECK-NEXT:      } {
# CHECK-NEXT:        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:            choco.ast.list_expr() {}
# CHECK-NEXT:          }
# CHECK-NEXT:        }
# CHECK-NEXT:      }
# CHECK-NEXT:    } {
# CHECK-NEXT:      choco.ast.pass()
# CHECK-NEXT:    }
# CHECK-NEXT:  }
# CHECK-NEXT:}
# CHECK-NEXT:
