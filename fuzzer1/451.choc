# RUN: choco-opt %s | filecheck %s
return 
None - (not not not --_2 ([not z or False and not True if not [] else not not None if not _ else not None if not not not True else -_ or not _ and not "",M]) or not not not _ if (not []) else ((False)) and --None if not (not not not [])[not []] else -_ if -(not not (not E)) else (_[not not not not ""[-(not S)[E]]])[(-(not ----None))] and not [] if _ else not not (not not --"") if S else t if "" else not -_ and not [] if ((not [][True])) else not _)[not not (not not not not not not [])]=not True

# CHECK: module() {
# CHECK-NEXT:  choco.ast.program() {} {
# CHECK-NEXT:    choco.ast.return() {}
# CHECK-NEXT:    choco.ast.assign() {
# CHECK-NEXT:      choco.ast.binary_expr() ["op" = "-"] {
# CHECK-NEXT:        choco.ast.literal() ["value" = !choco.ast.none]
# CHECK-NEXT:      } {
# CHECK-NEXT:        choco.ast.index_expr() {
# CHECK-NEXT:          choco.ast.if_expr() {
# CHECK-NEXT:            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:              choco.ast.list_expr() {}
# CHECK-NEXT:            }
# CHECK-NEXT:          } {
# CHECK-NEXT:            choco.ast.binary_expr() ["op" = "or"] {
# CHECK-NEXT:              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                    choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                      choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                        choco.ast.call_expr() ["func" = "_2"] {
# CHECK-NEXT:                          choco.ast.list_expr() {
# CHECK-NEXT:                            choco.ast.if_expr() {
# CHECK-NEXT:                              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                choco.ast.list_expr() {}
# CHECK-NEXT:                              }
# CHECK-NEXT:                            } {
# CHECK-NEXT:                              choco.ast.binary_expr() ["op" = "or"] {
# CHECK-NEXT:                                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                  choco.ast.id_expr() ["id" = "z"]
# CHECK-NEXT:                                }
# CHECK-NEXT:                              } {
# CHECK-NEXT:                                choco.ast.binary_expr() ["op" = "and"] {
# CHECK-NEXT:                                  choco.ast.literal() ["value" = !choco.ast.bool<False>]
# CHECK-NEXT:                                } {
# CHECK-NEXT:                                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                    choco.ast.literal() ["value" = !choco.ast.bool<True>]
# CHECK-NEXT:                                  }
# CHECK-NEXT:                                }
# CHECK-NEXT:                              }
# CHECK-NEXT:                            } {
# CHECK-NEXT:                              choco.ast.if_expr() {
# CHECK-NEXT:                                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                  choco.ast.id_expr() ["id" = "_"]
# CHECK-NEXT:                                }
# CHECK-NEXT:                              } {
# CHECK-NEXT:                                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                    choco.ast.literal() ["value" = !choco.ast.none]
# CHECK-NEXT:                                  }
# CHECK-NEXT:                                }
# CHECK-NEXT:                              } {
# CHECK-NEXT:                                choco.ast.if_expr() {
# CHECK-NEXT:                                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                        choco.ast.literal() ["value" = !choco.ast.bool<True>]
# CHECK-NEXT:                                      }
# CHECK-NEXT:                                    }
# CHECK-NEXT:                                  }
# CHECK-NEXT:                                } {
# CHECK-NEXT:                                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                    choco.ast.literal() ["value" = !choco.ast.none]
# CHECK-NEXT:                                  }
# CHECK-NEXT:                                } {
# CHECK-NEXT:                                  choco.ast.binary_expr() ["op" = "or"] {
# CHECK-NEXT:                                    choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                                      choco.ast.id_expr() ["id" = "_"]
# CHECK-NEXT:                                    }
# CHECK-NEXT:                                  } {
# CHECK-NEXT:                                    choco.ast.binary_expr() ["op" = "and"] {
# CHECK-NEXT:                                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                        choco.ast.id_expr() ["id" = "_"]
# CHECK-NEXT:                                      }
# CHECK-NEXT:                                    } {
# CHECK-NEXT:                                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                        choco.ast.literal() ["value" = ""]
# CHECK-NEXT:                                      }
# CHECK-NEXT:                                    }
# CHECK-NEXT:                                  }
# CHECK-NEXT:                                }
# CHECK-NEXT:                              }
# CHECK-NEXT:                            }
# CHECK-NEXT:                            choco.ast.id_expr() ["id" = "M"]
# CHECK-NEXT:                          }
# CHECK-NEXT:                        }
# CHECK-NEXT:                      }
# CHECK-NEXT:                    }
# CHECK-NEXT:                  }
# CHECK-NEXT:                }
# CHECK-NEXT:              }
# CHECK-NEXT:            } {
# CHECK-NEXT:              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                    choco.ast.id_expr() ["id" = "_"]
# CHECK-NEXT:                  }
# CHECK-NEXT:                }
# CHECK-NEXT:              }
# CHECK-NEXT:            }
# CHECK-NEXT:          } {
# CHECK-NEXT:            choco.ast.if_expr() {
# CHECK-NEXT:              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                choco.ast.index_expr() {
# CHECK-NEXT:                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                        choco.ast.list_expr() {}
# CHECK-NEXT:                      }
# CHECK-NEXT:                    }
# CHECK-NEXT:                  }
# CHECK-NEXT:                } {
# CHECK-NEXT:                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                    choco.ast.list_expr() {}
# CHECK-NEXT:                  }
# CHECK-NEXT:                }
# CHECK-NEXT:              }
# CHECK-NEXT:            } {
# CHECK-NEXT:              choco.ast.binary_expr() ["op" = "and"] {
# CHECK-NEXT:                choco.ast.literal() ["value" = !choco.ast.bool<False>]
# CHECK-NEXT:              } {
# CHECK-NEXT:                choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                  choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                    choco.ast.literal() ["value" = !choco.ast.none]
# CHECK-NEXT:                  }
# CHECK-NEXT:                }
# CHECK-NEXT:              }
# CHECK-NEXT:            } {
# CHECK-NEXT:              choco.ast.if_expr() {
# CHECK-NEXT:                choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                        choco.ast.id_expr() ["id" = "E"]
# CHECK-NEXT:                      }
# CHECK-NEXT:                    }
# CHECK-NEXT:                  }
# CHECK-NEXT:                }
# CHECK-NEXT:              } {
# CHECK-NEXT:                choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                  choco.ast.id_expr() ["id" = "_"]
# CHECK-NEXT:                }
# CHECK-NEXT:              } {
# CHECK-NEXT:                choco.ast.if_expr() {
# CHECK-NEXT:                  choco.ast.id_expr() ["id" = "_"]
# CHECK-NEXT:                } {
# CHECK-NEXT:                  choco.ast.binary_expr() ["op" = "and"] {
# CHECK-NEXT:                    choco.ast.index_expr() {
# CHECK-NEXT:                      choco.ast.index_expr() {
# CHECK-NEXT:                        choco.ast.id_expr() ["id" = "_"]
# CHECK-NEXT:                      } {
# CHECK-NEXT:                        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                choco.ast.index_expr() {
# CHECK-NEXT:                                  choco.ast.literal() ["value" = ""]
# CHECK-NEXT:                                } {
# CHECK-NEXT:                                  choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                                    choco.ast.index_expr() {
# CHECK-NEXT:                                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                                        choco.ast.id_expr() ["id" = "S"]
# CHECK-NEXT:                                      }
# CHECK-NEXT:                                    } {
# CHECK-NEXT:                                      choco.ast.id_expr() ["id" = "E"]
# CHECK-NEXT:                                    }
# CHECK-NEXT:                                  }
# CHECK-NEXT:                                }
# CHECK-NEXT:                              }
# CHECK-NEXT:                            }
# CHECK-NEXT:                          }
# CHECK-NEXT:                        }
# CHECK-NEXT:                      }
# CHECK-NEXT:                    } {
# CHECK-NEXT:                      choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                          choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                            choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                              choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                                choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                                  choco.ast.literal() ["value" = !choco.ast.none]
# CHECK-NEXT:                                }
# CHECK-NEXT:                              }
# CHECK-NEXT:                            }
# CHECK-NEXT:                          }
# CHECK-NEXT:                        }
# CHECK-NEXT:                      }
# CHECK-NEXT:                    }
# CHECK-NEXT:                  } {
# CHECK-NEXT:                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                      choco.ast.list_expr() {}
# CHECK-NEXT:                    }
# CHECK-NEXT:                  }
# CHECK-NEXT:                } {
# CHECK-NEXT:                  choco.ast.if_expr() {
# CHECK-NEXT:                    choco.ast.id_expr() ["id" = "S"]
# CHECK-NEXT:                  } {
# CHECK-NEXT:                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                            choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                              choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                                choco.ast.literal() ["value" = ""]
# CHECK-NEXT:                              }
# CHECK-NEXT:                            }
# CHECK-NEXT:                          }
# CHECK-NEXT:                        }
# CHECK-NEXT:                      }
# CHECK-NEXT:                    }
# CHECK-NEXT:                  } {
# CHECK-NEXT:                    choco.ast.if_expr() {
# CHECK-NEXT:                      choco.ast.literal() ["value" = ""]
# CHECK-NEXT:                    } {
# CHECK-NEXT:                      choco.ast.id_expr() ["id" = "t"]
# CHECK-NEXT:                    } {
# CHECK-NEXT:                      choco.ast.if_expr() {
# CHECK-NEXT:                        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                          choco.ast.index_expr() {
# CHECK-NEXT:                            choco.ast.list_expr() {}
# CHECK-NEXT:                          } {
# CHECK-NEXT:                            choco.ast.literal() ["value" = !choco.ast.bool<True>]
# CHECK-NEXT:                          }
# CHECK-NEXT:                        }
# CHECK-NEXT:                      } {
# CHECK-NEXT:                        choco.ast.binary_expr() ["op" = "and"] {
# CHECK-NEXT:                          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                            choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                              choco.ast.id_expr() ["id" = "_"]
# CHECK-NEXT:                            }
# CHECK-NEXT:                          }
# CHECK-NEXT:                        } {
# CHECK-NEXT:                          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                            choco.ast.list_expr() {}
# CHECK-NEXT:                          }
# CHECK-NEXT:                        }
# CHECK-NEXT:                      } {
# CHECK-NEXT:                        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                          choco.ast.id_expr() ["id" = "_"]
# CHECK-NEXT:                        }
# CHECK-NEXT:                      }
# CHECK-NEXT:                    }
# CHECK-NEXT:                  }
# CHECK-NEXT:                }
# CHECK-NEXT:              }
# CHECK-NEXT:            }
# CHECK-NEXT:          }
# CHECK-NEXT:        } {
# CHECK-NEXT:          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                        choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                          choco.ast.list_expr() {}
# CHECK-NEXT:                        }
# CHECK-NEXT:                      }
# CHECK-NEXT:                    }
# CHECK-NEXT:                  }
# CHECK-NEXT:                }
# CHECK-NEXT:              }
# CHECK-NEXT:            }
# CHECK-NEXT:          }
# CHECK-NEXT:        }
# CHECK-NEXT:      }
# CHECK-NEXT:    } {
# CHECK-NEXT:      choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:        choco.ast.literal() ["value" = !choco.ast.bool<True>]
# CHECK-NEXT:      }
# CHECK-NEXT:    }
# CHECK-NEXT:  }
# CHECK-NEXT:}
# CHECK-NEXT:
