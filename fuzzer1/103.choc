# RUN: choco-opt %s | filecheck %s
def _c(_:str) -> int:

	global _Fp
	nonlocal u_
	while not ""[not ""] if _ else not not [] if (B[-i[not []]][not None]) else not -(_) if not (True) else not not not (True)[[]]:
	
		pass
		pass
		pass
		pass
		pass
		
	
	pass
	

pass
pass

# CHECK: module() {
# CHECK-NEXT:  choco.ast.program() {
# CHECK-NEXT:    choco.ast.func_def() ["func_name" = "_c"] {
# CHECK-NEXT:      choco.ast.typed_var() ["var_name" = "_"] {
# CHECK-NEXT:        choco.ast.type_name() ["type_name" = "str"]
# CHECK-NEXT:      }
# CHECK-NEXT:    } {
# CHECK-NEXT:      choco.ast.type_name() ["type_name" = "int"]
# CHECK-NEXT:    } {
# CHECK-NEXT:      choco.ast.global_decl() ["decl_name" = "_Fp"]
# CHECK-NEXT:      choco.ast.nonlocal_decl() ["decl_name" = "u_"]
# CHECK-NEXT:      choco.ast.while() {
# CHECK-NEXT:        choco.ast.if_expr() {
# CHECK-NEXT:          choco.ast.id_expr() ["id" = "_"]
# CHECK-NEXT:        } {
# CHECK-NEXT:          choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:            choco.ast.index_expr() {
# CHECK-NEXT:              choco.ast.literal() ["value" = ""]
# CHECK-NEXT:            } {
# CHECK-NEXT:              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                choco.ast.literal() ["value" = ""]
# CHECK-NEXT:              }
# CHECK-NEXT:            }
# CHECK-NEXT:          }
# CHECK-NEXT:        } {
# CHECK-NEXT:          choco.ast.if_expr() {
# CHECK-NEXT:            choco.ast.index_expr() {
# CHECK-NEXT:              choco.ast.index_expr() {
# CHECK-NEXT:                choco.ast.id_expr() ["id" = "B"]
# CHECK-NEXT:              } {
# CHECK-NEXT:                choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                  choco.ast.index_expr() {
# CHECK-NEXT:                    choco.ast.id_expr() ["id" = "i"]
# CHECK-NEXT:                  } {
# CHECK-NEXT:                    choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                      choco.ast.list_expr() {}
# CHECK-NEXT:                    }
# CHECK-NEXT:                  }
# CHECK-NEXT:                }
# CHECK-NEXT:              }
# CHECK-NEXT:            } {
# CHECK-NEXT:              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                choco.ast.literal() ["value" = !choco.ast.none]
# CHECK-NEXT:              }
# CHECK-NEXT:            }
# CHECK-NEXT:          } {
# CHECK-NEXT:            choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                choco.ast.list_expr() {}
# CHECK-NEXT:              }
# CHECK-NEXT:            }
# CHECK-NEXT:          } {
# CHECK-NEXT:            choco.ast.if_expr() {
# CHECK-NEXT:              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                choco.ast.literal() ["value" = !choco.ast.bool<True>]
# CHECK-NEXT:              }
# CHECK-NEXT:            } {
# CHECK-NEXT:              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                choco.ast.unary_expr() ["op" = "-"] {
# CHECK-NEXT:                  choco.ast.id_expr() ["id" = "_"]
# CHECK-NEXT:                }
# CHECK-NEXT:              }
# CHECK-NEXT:            } {
# CHECK-NEXT:              choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                  choco.ast.unary_expr() ["op" = "not"] {
# CHECK-NEXT:                    choco.ast.index_expr() {
# CHECK-NEXT:                      choco.ast.literal() ["value" = !choco.ast.bool<True>]
# CHECK-NEXT:                    } {
# CHECK-NEXT:                      choco.ast.list_expr() {}
# CHECK-NEXT:                    }
# CHECK-NEXT:                  }
# CHECK-NEXT:                }
# CHECK-NEXT:              }
# CHECK-NEXT:            }
# CHECK-NEXT:          }
# CHECK-NEXT:        }
# CHECK-NEXT:      } {
# CHECK-NEXT:        choco.ast.pass()
# CHECK-NEXT:        choco.ast.pass()
# CHECK-NEXT:        choco.ast.pass()
# CHECK-NEXT:        choco.ast.pass()
# CHECK-NEXT:        choco.ast.pass()
# CHECK-NEXT:      }
# CHECK-NEXT:      choco.ast.pass()
# CHECK-NEXT:    }
# CHECK-NEXT:  } {
# CHECK-NEXT:    choco.ast.pass()
# CHECK-NEXT:    choco.ast.pass()
# CHECK-NEXT:  }
# CHECK-NEXT:}
# CHECK-NEXT:
